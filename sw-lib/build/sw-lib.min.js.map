{"version":3,"sources":["index.js"],"names":["global","factory","exports","module","define","amd","goog","swlib","parse","str","options","res","tokens","key","index","path","defaultDelimiter","delimiter","PATH_REGEXP","exec","m","escaped","offset","slice","length","next","prefix","name","capture","group","modifier","asterisk","push","pattern","optional","repeat","partial","escapeGroup","escapeString","substr","encodeURIComponentPretty","encodeURI","replace","c","charCodeAt","toString","toUpperCase","encodeAsterisk","tokensToFunction","matches","Array","i","RegExp","obj","opts","data","encode","pretty","encodeURIComponent","token","segment","value","TypeError","isarray","JSON","stringify","j","test","attachKeys","re","keys","flags","sensitive","regexpToRegexp","groups","source","match","arrayToRegexp","parts","pathToRegexp","regexp","join","stringToRegexp","tokensToRegExp","strict","end","route","endsWithDelimiter","broadcastUpdate","channel","cacheName","url","assert","isInstance","BroadcastChannel","isType","postMessage","type","meta","payload","updatedUrl","responsesAreSame","first","second","headersToCheck","Response","every","header","headers","has","get","ErrorFactory$1","constructor","errors","_errors","createError","thrownError","Error","message","stack","generatedError","ErrorFactory","atLeastOne","object","parameters","Object","some","parameter","map","p","hasMethod","expectedMethod","pop","expectedClass","isOneOf","values","includes","expectedType","actualType","isSWEnv","self","ServiceWorkerGlobalScope","isValue","expectedValue","actualValue","validMethods","Route","handler","method","index$1","isArray","arr","prototype","call","compile","ExpressRoute","regExp","regexpMatches","pathname","namedParamsToValues","forEach","index$$1","RegExpRoute","href","Router","setDefaultHandler","defaultHandler","setCatchHandler","catchHandler","registerRoutes","routes","addEventListener","event","URL","request","protocol","startsWith","responsePromise","matchResult","params","handle","catch","error","respondWith","registerRoute","RouterWrapper","_router","errors$1","ErrorFactory$3","asyncToGenerator","fn","gen","apply","arguments","Promise","resolve","reject","step","arg","info","done","then","err","BaseCacheManager","_entriesToCache","Map","_cacheName","cache","rawEntries","rawEntry","_addEntryToInstallList","_parseEntry","precacheEntry","entryID","previousEntry","_onDuplicateInstallEntryFound","set","_performInstallStep","_this","size","cachePromises","_cacheEntry","all","_this2","isCached","_isAlreadyCached","response","fetch","getNetworkRequest","credentials","redirect","ok","openCache","_getCache","put","_onEntryCached","_cleanUpOldEntries","_this3","caches","requestsCachedOnInstall","entry","allCachedRequests","cachedRequestsToDelete","filter","cachedRequest","delete","_this4","_cache","open","input","_onDuplicateEntryFound","newEntry","previous","idb","toArray","promisifyRequest","onsuccess","result","onerror","promisifyRequestCall","args","promisifyCursorRequestCall","Cursor","proxyProperties","ProxyClass","targetProp","properties","prop","defineProperty","val","proxyRequestMethods","Constructor","proxyMethods","proxyCursorRequestMethods","Index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","UpgradeDB","db","oldVersion","transaction","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","objectStore","IDBTransaction","createObjectStore","IDBDatabase","funcName","callback","nativeObject","getAll","query","count","instance","items","iterateCursor","continue","exp","version","upgradeCallback","indexedDB","onupgradeneeded","IDBHelper","storeName","_name","_version","_storeName","_getDb","_dbPromise","upgradeDB","close","tx","getAllValues","getAllKeys","tmpRevisionedCacheName","tmpUnrevisionedCacheName","registration","scope","defaultRevisionedCacheName","defaultUnrevisionedCacheName","RevisionDetailsModel","_idbHelper","revision","_close","BaseCacheEntry","cacheBust","requestOptions","Request","parsedURL","location","search","StringCacheEntry","DefaultsCacheEntry","RevisionedCacheManager","_revisionDetailsModel","revisionDetails","cachedResponse","RequestCacheEntry","UnrevisionedCacheManager","PrecacheManager","_eventsRegistered","_revisionedManager","_unrevisionedManager","_registerEvents","promiseChain","waitUntil","cacheRevisioned","revisionedFiles","cacheUnrevisioned","unrevisionedFiles","idbName","urlPropertyName","timestampPropertyName","Behavior","maxEntries","maxAgeSeconds","_dbs","_caches","getDB","openDb","keyPath","unique","getCache","cacheDidUpdate","newResponse","now","Date","updateTimestamp","expireEntries","oldEntries","findOldEntries","extraEntries","findExtraEntries","urls","Set","concat","deleteFromCacheAndIDB","_this5","expireOlderThan","timestampIndex","_this6","initialCount","_this7","_ref","_x","defaultHeadersToCheck","Behavior$1","channelName","_channel","oldResponse","notifyIfUpdated","defaultCacheName","behaviorCallbacks","ErrorFactory$4","RequestWrapper","behaviors","fetchOptions","matchOptions","behavior","callbackName","bind","cacheWillUpdate","fetchDidFail","fetchAndCache","waitOnCache","cachingComplete","cacheable","clone","Handler","requestWrapper","CacheFirst","FetchEvent","CacheOnly","NetworkFirst","NetworkOnly","StaleWhileRevalidate","fetchAndCacheResponse","SWLib","_precacheManager","cacheRevisionedAssets","warmRuntimeCache","router","cacheFirst","_getCachingMechanism","cacheOnly","networkFirst","networkOnly","staleWhileRevalidate","HandlerClass","behaviorParamsToClass","wrapperOptions","behaviorKeys","behaviorKey","BehaviorClass","behaviorParams","swLibInstance"],"mappings":"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","file":"sw-lib.min.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.goog = global.goog || {}, global.goog.swlib = factory());\n}(this, (function () { 'use strict';\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\n/**\n * A simple class to make errors and to help with testing.\n */\n\nclass ErrorFactory$1 {\n  /**\n   * @param {Object} errors A object containing key value pairs where the key\n   * is the error name / ID and the value is the error message.\n   */\n  constructor(errors) {\n    this._errors = errors;\n  }\n  /**\n   * @param {string} name The error name to be generated.\n   * @param {Error} [thrownError] The thrown error that resulted in this\n   * message.\n   * @return {Error} The generated error.\n   */\n  createError(name, thrownError) {\n    if (!(name in this._errors)) {\n      throw new Error(`Unable to generate error '${ name }'.`);\n    }\n\n    let message = this._errors[name];\n    let stack = null;\n    if (thrownError) {\n      message += ` [${ thrownError.message }]`;\n      stack = thrownError.stack;\n    }\n\n    const generatedError = new Error();\n    generatedError.name = name;\n    generatedError.message = message;\n    generatedError.stack = stack;\n    return generatedError;\n  }\n}\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\nconst errors = {\n  'not-in-sw': 'sw-lib must be loaded in your service worker file.',\n  'unsupported-route-type': 'Routes must be either a express style route ' + 'string, a Regex to capture request URLs or a Route instance.',\n  'empty-express-string': 'The Express style route string must have some ' + 'characters, an empty string is invalid.',\n  'bad-revisioned-cache-list': `The 'cacheRevisionedAssets()' method expects` + `an array of revisioned urls like so: ['/example/hello.1234.txt', ` + `{path: 'hello.txt', revision: '1234'}]`\n};\n\nvar ErrorFactory = new ErrorFactory$1(errors);\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\nfunction atLeastOne(object) {\n  const parameters = Object.keys(object);\n  if (!parameters.some(parameter => object[parameter] !== undefined)) {\n    throw Error('Please set at least one of the following parameters: ' + parameters.map(p => `'${ p }'`).join(', '));\n  }\n}\n\nfunction hasMethod(object, expectedMethod) {\n  const parameter = Object.keys(object).pop();\n  const type = typeof object[parameter][expectedMethod];\n  if (type !== 'function') {\n    throw Error(`The '${ parameter }' parameter must be an object that exposes ` + `a '${ expectedMethod }' method.`);\n  }\n}\n\nfunction isInstance(object, expectedClass) {\n  const parameter = Object.keys(object).pop();\n  if (!(object[parameter] instanceof expectedClass)) {\n    throw Error(`The '${ parameter }' parameter must be an instance of ` + `'${ expectedClass.name }'`);\n  }\n}\n\nfunction isOneOf(object, values) {\n  const parameter = Object.keys(object).pop();\n  if (!values.includes(object[parameter])) {\n    throw Error(`The '${ parameter }' parameter must be set to one of the ` + `following: ${ values }`);\n  }\n}\n\nfunction isType(object, expectedType) {\n  const parameter = Object.keys(object).pop();\n  const actualType = typeof object[parameter];\n  if (actualType !== expectedType) {\n    throw Error(`The '${ parameter }' parameter has the wrong type. ` + `(Expected: ${ expectedType }, actual: ${ actualType })`);\n  }\n}\n\nfunction isSWEnv() {\n  return 'ServiceWorkerGlobalScope' in self && self instanceof ServiceWorkerGlobalScope;\n}\n\nfunction isValue(object, expectedValue) {\n  const parameter = Object.keys(object).pop();\n  const actualValue = object[parameter];\n  if (actualValue !== expectedValue) {\n    throw Error(`The '${ parameter }' parameter has the wrong value. ` + `(Expected: ${ expectedValue }, actual: ${ actualValue })`);\n  }\n}\n\nvar assert = {\n  atLeastOne,\n  hasMethod,\n  isInstance,\n  isOneOf,\n  isType,\n  isSWEnv,\n  isValue\n};\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\nconst defaultMethod = 'GET';\nconst validMethods = ['DELETE', 'GET', 'HEAD', 'POST', 'PUT'];\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\n/**\n * @memberof module:sw-routing\n */\nclass Route {\n  /**\n   * The constructor for Route expects an object with `match` and `handler`\n   * properties which should both be functions.\n   *\n   * @param {function} match - The function that determines whether the\n   *        route matches.\n   * @param {Object} handler - An Object with a `handle` method. That method\n   *        will be used to respond to matching requests.\n   * @param {string} [method] Only match requests that use this\n   *        HTTP method. Defaults to `'GET'` if not specified.\n   */\n  constructor({ match, handler, method } = {}) {\n    assert.isType({ match }, 'function');\n    assert.hasMethod({ handler }, 'handle');\n\n    this.match = match;\n    this.handler = handler;\n    if (method) {\n      assert.isOneOf({ method }, validMethods);\n      this.method = method;\n    } else {\n      this.method = defaultMethod;\n    }\n  }\n}\n\nvar index$1 = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\nvar isarray = index$1;\n\n/**\n * Expose `pathToRegexp`.\n */\nvar index = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\nindex.parse = parse_1;\nindex.compile = compile_1;\nindex.tokensToFunction = tokensToFunction_1;\nindex.tokensToRegExp = tokensToRegExp_1;\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\n/**\n * ExpressRoute is a helper class to make defining Express-style\n * [Routes]{@link Route} easy.\n *\n * Under the hood, it uses the [`path-to-regexp`](https://www.npmjs.com/package/path-to-regexp)\n * library to transform the `path` parameter into a regular expression, which is\n * then matched against the URL's path.\n *\n * @memberof module:sw-routing\n * @extends Route\n */\nclass ExpressRoute extends Route {\n  /**\n   * @param {string} path The path to use for routing.\n   *        If the path contains [named parameters](https://github.com/pillarjs/path-to-regexp#named-parameters),\n   *        then an Object mapping parameter names to the corresponding value\n   *        will be passed to the handler via `params`.\n   * @param {function} handler The handler to manage the response.\n   * @param {string} [method] Only match requests that use this\n   *        HTTP method. Defaults to `'GET'` if not specified.\n   */\n  constructor({ path, handler, method }) {\n    assert.isType({ path }, 'string');\n\n    let keys = [];\n    // keys is populated as a side effect of pathToRegExp. This isn't the nicest\n    // API, but so it goes.\n    // https://github.com/pillarjs/path-to-regexp#usage\n    const regExp = index(path, keys);\n    const match = ({ url }) => {\n      const regexpMatches = url.pathname.match(regExp);\n\n      // Return null immediately if this route doesn't match.\n      if (!regexpMatches) {\n        return null;\n      }\n\n      // If the route does match, then collect values for all the named\n      // parameters that were returned in keys.\n      // If there are no named parameters then this will end up returning {},\n      // which is truthy, and therefore a sufficient return value.\n      const namedParamsToValues = {};\n      keys.forEach((key, index$$1) => {\n        namedParamsToValues[key.name] = regexpMatches[index$$1 + 1];\n      });\n\n      return namedParamsToValues;\n    };\n\n    super({ match, handler, method });\n  }\n}\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\n/**\n * RegExpRoute is a helper class to make defining Regular Expression based\n * [Routes]{@link Route} easy.\n *\n * @memberof module:sw-routing\n * @extends Route\n */\nclass RegExpRoute extends Route {\n  /**\n   * @param {RegExp} regExp The regular expression to match against URLs.\n   *        If the `RegExp` contains [capture groups](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references),\n   *        then the array of captured values will be passed to the handler via\n   *        `params`.\n   * @param {function} handler The handler to manage the response.\n   * @param {string} [method] Only match requests that use this\n   *        HTTP method. Defaults to `'GET'` if not specified.\n   */\n  constructor({ regExp, handler, method }) {\n    assert.isInstance({ regExp }, RegExp);\n\n    const match = ({ url }) => {\n      const regexpMatches = url.href.match(regExp);\n      // Return null immediately if this route doesn't match.\n      if (!regexpMatches) {\n        return null;\n      }\n\n      // If the route matches, but there aren't any capture groups defined, then\n      // this will return [], which is truthy and therefore sufficient to\n      // indicate a match.\n      // If there are capture groups, then it will return their values.\n      return regexpMatches.slice(1);\n    };\n\n    super({ match, handler, method });\n  }\n}\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\n/**\n * The Router takes a set of {@link Route}'s and will direct fetch events\n * to those Route in the order they are registered.\n *\n * @memberof module:sw-routing\n */\nclass Router {\n  /**\n   * A default handler will have it's handle method called when a\n   * request doesn't have a matching route.\n   * @param {Object} input\n   * @param {Handler} input.handler A handler to deal with default routes.\n   */\n  setDefaultHandler({ handler } = {}) {\n    assert.hasMethod({ handler }, 'handle');\n\n    this.defaultHandler = handler;\n  }\n\n  /**\n   * If a Route throws an error while handling a request, this catch handler\n   * will be called to return an error case.\n   * @param {Object} input\n   * @param {Handler} input.handler A handler to deal with errors in routes.\n   */\n  setCatchHandler({ handler } = {}) {\n    assert.hasMethod({ handler }, 'handle');\n\n    this.catchHandler = handler;\n  }\n\n  /**\n   * Register routes will take an array of Routes to register with the\n   * router.\n   *\n   * @param {Object} options\n   * @param {Array<Route>} options.routes\n   * @return {void}\n   */\n  registerRoutes({ routes } = {}) {\n    assert.isInstance({ routes }, Array);\n\n    self.addEventListener('fetch', event => {\n      const url = new URL(event.request.url);\n      if (!url.protocol.startsWith('http')) {\n        return;\n      }\n\n      let responsePromise;\n      for (let route of routes || []) {\n        if (route.method !== event.request.method) {\n          continue;\n        }\n\n        const matchResult = route.match({ url, event });\n        if (matchResult) {\n          let params = matchResult;\n\n          if (Array.isArray(params) && params.length === 0) {\n            // Instead of passing an empty array in as params, use undefined.\n            params = undefined;\n          } else if (params.constructor === Object && Object.keys(params).length === 0) {\n            // Instead of passing an empty object in as params, use undefined.\n            params = undefined;\n          }\n\n          responsePromise = route.handler.handle({ url, event, params });\n          break;\n        }\n      }\n\n      if (!responsePromise && this.defaultHandler) {\n        responsePromise = this.defaultHandler.handle({ url, event });\n      }\n\n      if (responsePromise && this.catchHandler) {\n        responsePromise = responsePromise.catch(error => {\n          return this.catchHandler.handle({ url, event, error });\n        });\n      }\n\n      if (responsePromise) {\n        event.respondWith(responsePromise);\n      }\n    });\n  }\n\n  /**\n   * Registers a route with the router.\n   * @param {Object} input\n   * @param {Route} input.route The route to register.\n   */\n  registerRoute({ route } = {}) {\n    assert.isInstance({ route }, Route);\n\n    this.registerRoutes({ routes: [route] });\n  }\n}\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\n/**\n * sw-routing Module\n * @module sw-routing\n */\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\n/* eslint-env browser, serviceworker */\n\n/**\n * A simple class that pulls together a few different pieces from the\n * Router Module to surface them in a friendly API.\n *\n * @example <caption>How to define a simple route with caching\n * strategy.</caption>\n *\n * self.goog.swlib.router.registerRoute('/about', ....);\n *\n * @example <caption>How to define a simple route with custom caching\n * strategy.</caption>\n *\n * self.goog.swlib.router.registerRoute('/about', (args) => {\n *   // The requested URL\n *   console.log(args.url);\n *\n *   // The FetchEvent to handle\n *   console.log(args.event);\n *\n *   // The parameters from the matching route.\n *   console.log(args.params);\n *\n *   // Return a promise that resolves with a Response.\n *   return fetch(args.url);\n * }));\n *\n * @example <caption>How to define a route using a Route instance.</caption>\n *\n * const routeInstance = new goog.swlib.Route({\n *   match: (url) => {\n *     // Return true or false\n *     return true;\n *   },\n *   handler: {\n *     handle: (args) => {\n *       // The requested URL\n *       console.log(args.url);\n *\n *       // The FetchEvent to handle\n *       console.log(args.event);\n *\n *       // The parameters from the matching route.\n *       console.log(args.params);\n *\n *       // Return a promise that resolves with a Response.\n *       return fetch(args.url);\n *     },\n *   },\n * });\n * self.goog.swlib.router.registerRoute(routeInstance);\n *\n * @memberof module:sw-lib\n */\nclass RouterWrapper {\n  /**\n   * Constructs a new RouterWrapper.\n   */\n  constructor() {\n    this._router = new Router();\n  }\n\n  /**\n   * @param {String|Regex|Route} capture The capture for a route can be one\n   * of three types.\n   * 1. It can be an Express style route, like: '/example/:anything/route/'\n   *    The only gotcha with this is that it will only capture URL's on your\n   *    origin.\n   * 1. A regex that will be tested against request URL's.\n   * 1. A [Route]{@link module:sw-routing.Route} instance.\n   * @param {function|Handler} handler The handler is ignored if you pass in\n   * a Route object, otherwise it's required. The handler will be called when\n   * the route is caught by the capture criteria.\n   */\n  registerRoute(capture, handler) {\n    if (typeof handler === 'function') {\n      handler = {\n        handle: handler\n      };\n    }\n\n    if (typeof capture === 'string') {\n      if (capture.length === 0) {\n        throw ErrorFactory.createError('empty-express-string');\n      }\n\n      this._router.registerRoute({\n        route: new ExpressRoute({ path: capture, handler })\n      });\n    } else if (capture instanceof RegExp) {\n      this._router.registerRoute({\n        route: new RegExpRoute({ regExp: capture, handler })\n      });\n    } else if (capture instanceof Route) {\n      this._router.registerRoute({ route: capture });\n    } else {\n      throw ErrorFactory.createError('unsupported-route-type');\n    }\n  }\n}\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\nconst errors$1 = {\n  'not-in-sw': 'sw-precaching must be loaded in your service worker file.',\n  'invalid-revisioned-entry': `File manifest entries must be either a ` + `string with revision info in the url or an object with a 'url' and ` + `'revision' parameters.`,\n  'invalid-unrevisioned-entry': ``,\n  'bad-cache-bust': `The cache bust parameter must be a boolean.`,\n  'duplicate-entry-diff-revisions': `An attempt was made to cache the same ` + `url twice with each having different revisions. This is not supported.`,\n  'request-not-cached': `A request failed the criteria to be cached. By ` + `default, only responses with 'response.ok = true' are cached.`,\n  'should-override': 'Method should be overridden by the extending class.'\n};\n\nvar ErrorFactory$3 = new ErrorFactory$1(errors$1);\n\nvar asyncToGenerator = function (fn) {\n  return function () {\n    var gen = fn.apply(this, arguments);\n    return new Promise(function (resolve, reject) {\n      function step(key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n\n        if (info.done) {\n          resolve(value);\n        } else {\n          return Promise.resolve(value).then(function (value) {\n            step(\"next\", value);\n          }, function (err) {\n            step(\"throw\", err);\n          });\n        }\n      }\n\n      return step(\"next\");\n    });\n  };\n};\n\n/**\n * This class handles the shared logic for caching revisioned and unrevisioned\n * assets.\n * @private\n * @memberof module:sw-precaching\n */\nclass BaseCacheManager {\n  /**\n   * Constructor for BaseCacheManager\n   * @param {String} cacheName This is the cache name to store requested assets.\n   */\n  constructor(cacheName) {\n    this._entriesToCache = new Map();\n    this._cacheName = cacheName;\n  }\n\n  /**\n   * This method will add the entries to the install list.\n   * This will manage duplicate entries and perform the caching during\n   * the install step.\n   * @param {Array<String|Request|Object>} rawEntries A raw entry that can be\n   * parsed into a BaseCacheEntry by the inheriting CacheManager.\n   */\n  cache(rawEntries) {\n    rawEntries.forEach(rawEntry => {\n      this._addEntryToInstallList(this._parseEntry(rawEntry));\n    });\n  }\n\n  /**\n   * This method will add an entry to the install list.\n   *\n   * This method will filter out duplicates and also checks for the scenario\n   * where two entries have the same URL but different revisions. For example\n   * caching:\n   * [\n   *   {url: '/hello.txt', revision: '1'},\n   *   {url: '/hello.txt', revision: '2'},\n   * ]\n   * Will throw an error as the library can't determine the correct revision\n   * and this may cause issues in future when updating the service worker\n   * with new revisions.\n   *\n   * @private\n   * @param {RevisionedCacheEntry} precacheEntry The file entry to be cached\n   * during the next install event.\n   */\n  _addEntryToInstallList(precacheEntry) {\n    const entryID = precacheEntry.entryID;\n    const previousEntry = this._entriesToCache.get(precacheEntry.entryID);\n    if (!previousEntry) {\n      // This entry isn't in the install list\n      this._entriesToCache.set(entryID, precacheEntry);\n      return;\n    }\n\n    this._onDuplicateInstallEntryFound(precacheEntry, previousEntry);\n  }\n\n  /**\n   * This method manages the actual install event to cache the revisioned\n   * assets.\n   *\n   * @private\n   * @return {Promise} The promise resolves when all the desired assets are\n   * cached.\n   */\n  _performInstallStep() {\n    var _this = this;\n\n    return asyncToGenerator(function* () {\n      if (_this._entriesToCache.size === 0) {\n        return;\n      }\n\n      const cachePromises = [];\n      _this._entriesToCache.forEach(function (precacheEntry) {\n        cachePromises.push(_this._cacheEntry(precacheEntry));\n      });\n\n      // Wait for all requests to be cached.\n      return Promise.all(cachePromises);\n    })();\n  }\n\n  /**\n   * This method will request the entry and save it to the cache if the response\n   * is valid.\n   *\n   * @private\n   * @param {BaseCacheEntry} precacheEntry The entry to fetch and cache.\n   * @return {Promise} Returns a promise that resolves once the entry is fetched\n   * and cached.\n   */\n  _cacheEntry(precacheEntry) {\n    var _this2 = this;\n\n    return asyncToGenerator(function* () {\n      const isCached = yield _this2._isAlreadyCached(precacheEntry);\n      if (isCached) {\n        return;\n      }\n\n      let response = yield fetch(precacheEntry.getNetworkRequest(), {\n        credentials: 'same-origin',\n        redirect: 'follow'\n      });\n      if (response.ok) {\n        const openCache = yield _this2._getCache();\n        yield openCache.put(precacheEntry.request, response);\n\n        return _this2._onEntryCached(precacheEntry);\n      } else {\n        throw ErrorFactory$3.createError('request-not-cached', {\n          message: `Failed to get a cacheable response for ` + `'${ precacheEntry.request.url }'`\n        });\n      }\n    })();\n  }\n\n  /**\n   * This method will compare the URL's\n   * and figure out which assets are no longer required to be cached.\n   *\n   * This should be called in the activate event.\n   *\n   * @private\n   * @return {Promise} Promise that resolves once the cache entries have been\n   * cleaned.\n   */\n  _cleanUpOldEntries() {\n    var _this3 = this;\n\n    return asyncToGenerator(function* () {\n      if (!(yield caches.has(_this3._cacheName))) {\n        // Cache doesn't exist, so nothing to delete\n        return;\n      }\n\n      const requestsCachedOnInstall = [];\n      _this3._entriesToCache.forEach(function (entry) {\n        requestsCachedOnInstall.push(entry.request.url);\n      });\n\n      const openCache = yield _this3._getCache();\n      const allCachedRequests = yield openCache.keys();\n\n      const cachedRequestsToDelete = allCachedRequests.filter(function (cachedRequest) {\n        if (requestsCachedOnInstall.includes(cachedRequest.url)) {\n          return false;\n        }\n        return true;\n      });\n\n      return Promise.all(cachedRequestsToDelete.map(function (cachedRequest) {\n        return openCache.delete(cachedRequest);\n      }));\n    })();\n  }\n\n  /**\n   * A simple helper method to get the cache used for precaching assets.\n   *\n   * @private\n   * @return {Promise<Cache>} The cache to be used for precaching.\n   */\n  _getCache() {\n    var _this4 = this;\n\n    return asyncToGenerator(function* () {\n      if (!_this4._cache) {\n        _this4._cache = yield caches.open(_this4._cacheName);\n      }\n\n      return _this4._cache;\n    })();\n  }\n\n  /**\n   * This method ensures that the file entry in the maniest is valid and\n   * can be parsed as a BaseCacheEntry.\n   *\n   * @private\n   * @abstract\n   * @param {String | Request | Object} input Either a URL string, a Request\n   * or an object with a `url`, `revision` and optional `cacheBust` parameter.\n   * @return {BaseCacheEntry} Returns a parsed version of the file entry.\n   */\n  _parseEntry(input) {\n    throw ErrorFactory$3.createError('should-override');\n  }\n\n  /**\n   * This method is called if the consumer of this cache manager has to\n   * cache entries that are to be installed but have the same \"entryID\".\n   * This means that the user is trying to cache the same thing twice.\n   * This callback gives extending classed a chance to throw an error\n   * if there is an edge case that can't be handled.\n   *\n   * @private\n   * @abstract\n   * @param {BaseCacheEntry} newEntry The entry that is to be cached.\n   * @param {BaseCacheEntry} previous The entry that is currently cached.\n   */\n  _onDuplicateEntryFound(newEntry, previous) {\n    throw ErrorFactory$3.createError('should-override');\n  }\n\n  /**\n   * This method confirms with a fileEntry is already in the cache with the\n   * appropriate revision.\n   * If the revision is known, matching the requested `fileEntry.revision` and\n   * the cache entry exists for the `fileEntry.path` this method returns true.\n   * False otherwise.\n   *\n   * @private\n   * @abstract\n   * @param {BaseCacheEntry} precacheEntry A file entry with `path` and\n   * `revision` parameters.\n   * @return {Promise<Boolean>} Returns true is the fileEntry is already\n   * cached, false otherwise.\n   */\n  _isAlreadyCached(precacheEntry) {\n    throw ErrorFactory$3.createError('should-override');\n  }\n\n  /**\n   * This method can be used for any work that needs to be done when a\n   * URL has been cached.\n   *\n   * @private\n   * @abstract\n   * @param {BaseCacheEntry} precacheEntry A file entry with `path` and\n   * `revision` parameters.\n   * @return {Promise} Returns a Promise that resolves once it's work has\n   * been done.\n   */\n  _onEntryCached(precacheEntry) {\n    throw ErrorFactory$3.createError('should-override');\n  }\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar idb = createCommonjsModule(function (module) {\n'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  {\n    module.exports = exp;\n  }\n}());\n});\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\n/**\n * A wrapper to store for an IDB connection to a particular ObjectStore.\n *\n * @private\n */\nclass IDBHelper {\n  constructor(name, version, storeName) {\n    if (name == undefined || version == undefined || storeName == undefined) {\n      throw Error('name, version, storeName must be passed to the ' + 'constructor.');\n    }\n\n    this._name = name;\n    this._version = version;\n    this._storeName = storeName;\n  }\n\n  /**\n   * Returns a promise that resolves with an open connection to IndexedDB,\n   * either existing or newly opened.\n   *\n   * @private\n   * @return {Promise<DB>}\n   */\n  _getDb() {\n    if (this._dbPromise) {\n      return this._dbPromise;\n    }\n\n    this._dbPromise = idb.open(this._name, this._version, upgradeDB => {\n      upgradeDB.createObjectStore(this._storeName);\n    }).then(db => {\n      return db;\n    });\n\n    return this._dbPromise;\n  }\n\n  close() {\n    if (!this._dbPromise) {\n      return;\n    }\n\n    return this._dbPromise.then(db => {\n      db.close();\n      this._dbPromise = null;\n    });\n  }\n\n  /**\n   * Wrapper on top of the idb wrapper, which simplifies saving the key/value\n   * pair to the object store.\n   * Returns a Promise that fulfills when the transaction completes.\n   *\n   * @private\n   * @param {String} key\n   * @param {Object} value\n   * @return {Promise<T>}\n   */\n  put(key, value) {\n    return this._getDb().then(db => {\n      const tx = db.transaction(this._storeName, 'readwrite');\n      const objectStore = tx.objectStore(this._storeName);\n      objectStore.put(value, key);\n      return tx.complete;\n    });\n  }\n\n  /**\n   * Wrapper on top of the idb wrapper, which simplifies deleting an entry\n   * from the object store.\n   * Returns a Promise that fulfills when the transaction completes.\n   *\n   * @private\n   * @param {String} key\n   * @return {Promise<T>}\n   */\n  delete(key) {\n    return this._getDb().then(db => {\n      const tx = db.transaction(this._storeName, 'readwrite');\n      const objectStore = tx.objectStore(this._storeName);\n      objectStore.delete(key);\n      return tx.complete;\n    });\n  }\n\n  /**\n   * Wrapper on top of the idb wrapper, which simplifies getting a key's value\n   * from the object store.\n   * Returns a promise that fulfills with the value.\n   *\n   * @private\n   * @param {String} key\n   * @return {Promise<Object>}\n   */\n  get(key) {\n    return this._getDb().then(db => {\n      return db.transaction(this._storeName).objectStore(this._storeName).get(key);\n    });\n  }\n\n  /**\n   * Wrapper on top of the idb wrapper, which simplifies getting all the values\n   * in an object store.\n   * Returns a promise that fulfills with all the values.\n   *\n   * @private\n   * @return {Promise<Array<Object>>}\n   */\n  getAllValues() {\n    return this._getDb().then(db => {\n      return db.transaction(this._storeName).objectStore(this._storeName).getAll();\n    });\n  }\n\n  /**\n   * Wrapper on top of the idb wrapper, which simplifies getting all the keys\n   * in an object store.\n   * Returns a promise that fulfills with all the keys.\n   *\n   * @private\n   * @param {String} storeName\n   * @return {Promise<Array<Object>>}\n   */\n  getAllKeys() {\n    return this._getDb().then(db => {\n      return db.transaction(this._storeName).objectStore(this._storeName).getAllKeys();\n    });\n  }\n}\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\nconst cacheBustParamName = '_sw-precaching';\nconst version = 'v1';\nconst dbName = 'sw-precaching';\nconst dbVersion = '1';\nconst dbStorename = 'asset-revisions';\n\nlet tmpRevisionedCacheName = `sw-precaching-revisioned-${ version }`;\nlet tmpUnrevisionedCacheName = `sw-precaching-unrevisioned-${ version }`;\nif (self && self.registration) {\n  tmpRevisionedCacheName += `-${ self.registration.scope }`;\n  tmpUnrevisionedCacheName += `-${ self.registration.scope }`;\n}\nconst defaultRevisionedCacheName = tmpRevisionedCacheName;\nconst defaultUnrevisionedCacheName = tmpUnrevisionedCacheName;\n\n/**\n * This class is a simple model that stores EntryID's with their current\n * revision. This is used when caching revisioned assets so that only entries\n * with different revisions are downloaded and updated.\n *\n * @private\n * @memberof module:sw-precaching\n */\nclass RevisionDetailsModel {\n  /**\n   * Constructor for RevisionDetails Model.\n   */\n  constructor() {\n    this._idbHelper = new IDBHelper(dbName, dbVersion, dbStorename);\n  }\n\n  /**\n   * This method gets the revision details for a given entryID.\n   * @param {String} entryID The ID of the revision.\n   * @return {Promise<String|null>} Returns a revision string or\n   * null if there is no revision information.\n   */\n  get(entryID) {\n    return this._idbHelper.get(entryID);\n  }\n\n  /**\n   * This method saves the revision details to indexedDB.\n   * @param {String} entryID The ID of the revision.\n   * @param {String} revision The current revision for this entryID.\n   * @return {Promise} Promise that resolves once the data has been saved.\n   */\n  put(entryID, revision) {\n    return this._idbHelper.put(entryID, revision);\n  }\n\n  /**\n   * This method closes the indexdDB helper. This is only used for unit testing\n   * to ensure clean state between tests.\n   *\n   * @private\n   */\n  _close() {\n    this._idbHelper.close();\n  }\n}\n\n/**\n * This class is extended by a number of classes that take different inputs\n * and generates the required fields for a BaseCacheEntry.\n *\n * @private\n * @memberof module:sw-precaching\n */\nclass BaseCacheEntry {\n  /**\n   * This constructor expects an object and a number or required fields.\n   * You shouldn't need to use this constructor directly.\n   *\n   * @param {Object} input\n   * @param {String} input.entryID\n   * @param {String} input.revision\n   * @param {Request} input.request\n   * @param {boolean} input.cacheBust\n   */\n  constructor({ entryID, revision, request, cacheBust }) {\n    this.entryID = entryID;\n    this.revision = revision;\n    this.request = request;\n    this.cacheBust = cacheBust;\n  }\n\n  /**\n   * This method is required since any revisioned request needs to cache bust.\n   * To ensure this is consistent, CacheManagers will make a network request\n   * using this specially formatted request.\n   *\n   * When caching the response, it will be cached against the origin `request`,\n   * removing lookup for the cachebusted URL.\n   *\n   * @return {Request} Returns a cache busted request if needed, otherwise\n   * a normal request with credentials set to 'same-origin' and redirect set to\n   * follow.\n   */\n  getNetworkRequest() {\n    if (this.cacheBust !== true) {\n      // For the RequestCacheEntry we should return it to ensure headers are\n      // kept in tact and part of the request.\n      return this.request;\n    }\n\n    let url = this.request.url;\n    const requestOptions = {};\n\n    if (this.cacheBust === true) {\n      if ('cache' in Request.prototype) {\n        // Make use of the Request cache mode where we can.\n        // Reload skips the HTTP cache for outgoing requests and updates\n        // the cache with the returned reponse.\n        requestOptions.cache = 'reload';\n      } else {\n        const parsedURL = new URL(url, location);\n        parsedURL.search += (parsedURL.search ? '&' : '') + encodeURIComponent(cacheBustParamName) + '=' + encodeURIComponent(this.revision);\n        url = parsedURL.toString();\n      }\n    }\n\n    return new Request(url, requestOptions);\n  }\n}\n\n/**\n * This class will take a string and parse it as a BaseCacheEntry.\n *\n * @private\n * @memberof module:sw-precaching\n * @extends {module:sw-precaching.BaseCacheEntry}\n */\nclass StringCacheEntry extends BaseCacheEntry {\n  /**\n   * Cosntructor for StringCacheEntry.\n   *\n   * @param {String} url A URL to cache.\n   */\n  constructor(url) {\n    assert.isType({ url }, 'string');\n    if (url.length === 0) {\n      throw ErrorFactory$3.createError('invalid-revisioned-entry', new Error('Bad url Parameter. It should be a string:' + JSON.stringify(url)));\n    }\n\n    super({\n      entryID: url,\n      revision: url,\n      request: new Request(url),\n      cacheBust: false\n    });\n  }\n}\n\n/**\n * This class will take an object of parameters, validate the input and\n * parse to be used as a BaseCacheEntry.\n *\n * @private\n * @memberof module:sw-precaching\n * @extends {module:sw-precaching.BaseCacheEntry}\n */\nclass DefaultsCacheEntry extends BaseCacheEntry {\n  /**\n   * This class gives most control over configuring a cache entry.\n   * @param {Object} input\n   * @param {String} input.entryID The ID of the entry. This is the key used\n   * with IndexDB to store the revision. Normally this is just the URL.\n   * @param {String} input.revision This is the revision associated with this\n   * URL.\n   * @param {String} input.url The URL to cache.\n   * @param {boolean} input.cacheBust A boolean to indicate if this request\n   * will require cache busting (i.e. the URL is not unique between SW install).\n   */\n  constructor({ entryID, revision, url, cacheBust }) {\n    if (typeof cacheBust === 'undefined') {\n      cacheBust = true;\n    }\n    if (typeof entryID === 'undefined') {\n      entryID = new URL(url, location).toString();\n    }\n\n    assert.isType({ revision }, 'string');\n    if (revision.length === 0) {\n      throw ErrorFactory$3.createError('invalid-revisioned-entry', new Error('Bad revision Parameter. It should be a string with at ' + 'least one character: ' + JSON.stringify(revision)));\n    }\n\n    assert.isType({ url }, 'string');\n    if (url.length === 0) {\n      throw ErrorFactory$3.createError('invalid-revisioned-entry', new Error('Bad url Parameter. It should be a string:' + JSON.stringify(url)));\n    }\n\n    assert.isType({ entryID }, 'string');\n    if (entryID.length === 0) {\n      throw ErrorFactory$3.createError('invalid-revisioned-entry', new Error('Bad entryID Parameter. It should be a string with at ' + 'least one character: ' + JSON.stringify(entryID)));\n    }\n\n    assert.isType({ cacheBust }, 'boolean');\n\n    super({\n      entryID,\n      revision,\n      request: new Request(url),\n      cacheBust\n    });\n  }\n}\n\n/**\n * This class extends a lot of the internal methods from BaseCacheManager\n * to manage caching of revisioned assets.\n *\n * @private\n * @memberof module:sw-precaching\n * @extends {module:sw-precaching.BaseCacheManager}\n */\nclass RevisionedCacheManager extends BaseCacheManager {\n  /**\n   * Constructor for RevisionedCacheManager\n   */\n  constructor() {\n    super(defaultRevisionedCacheName);\n\n    this._revisionDetailsModel = new RevisionDetailsModel();\n  }\n\n  /**\n   * This method will add the entries to the install list.\n   * This will manage duplicate entries and perform the caching during\n   * the install step.\n   *\n   * @example\n   *\n   * revisionedManager.cache([\n   *   '/styles/hello.1234.css',\n   *   {\n   *     url: '/images/logo.png',\n   *     revision: '1234'\n   *   }\n   * ]);\n   *\n   * @param {Array<String|Object>} rawEntries A raw entry that can be\n   * parsed into a BaseCacheEntry.\n   */\n  cache(rawEntries) {\n    // This method is here to provide useful docs.\n    super.cache(rawEntries);\n  }\n\n  /**\n   * This method ensures that the file entry in the maniest is valid and\n   * can be parsed as a BaseCacheEntry.\n   *\n   * @private\n   * @abstract\n   * @param {String | Object} input Either a URL string\n   * or an object with a `url`, `revision` and optional `cacheBust` parameter.\n   * @return {BaseCacheEntry} Returns a parsed version of the file entry.\n   */\n  _parseEntry(input) {\n    if (typeof input === 'undefined' || input === null) {\n      throw ErrorFactory$3.createError('invalid-revisioned-entry', new Error('Invalid file entry: ' + JSON.stringify(input)));\n    }\n\n    let precacheEntry;\n    switch (typeof input) {\n      case 'string':\n        precacheEntry = new StringCacheEntry(input);\n        break;\n      case 'object':\n        precacheEntry = new DefaultsCacheEntry(input);\n        break;\n      default:\n        throw ErrorFactory$3.createError('invalid-revisioned-entry', new Error('Invalid file entry: ' + JSON.stringify(precacheEntry)));\n    }\n\n    return precacheEntry;\n  }\n\n  /**\n   * If a dupe entry exists, check the revision. If the revisions are the same\n   * it's simply a duplicate entry. If they are different, we have two\n   * identical requests with two different revisions which will put this\n   * module into a bad state.\n   *\n   * @private\n   * @param {BaseCacheEntry} newEntry The entry that is to be cached.\n   * @param {BaseCacheEntry} previousEntry The entry that is currently cached.\n   */\n  _onDuplicateInstallEntryFound(newEntry, previousEntry) {\n    if (previousEntry.revision !== newEntry.revision) {\n      throw ErrorFactory$3.createError('duplicate-entry-diff-revisions', new Error(`${ JSON.stringify(previousEntry) } <=> ` + `${ JSON.stringify(newEntry) }`));\n    }\n  }\n\n  /**\n   * This method confirms with a precacheEntry is already in the cache with the\n   * appropriate revision.\n   * If the revision is known, the requested `precacheEntry.revision` is saved\n   * and the cache entry exists for the `precacheEntry.path` this method\n   * will return true.\n   *\n   * @private\n   * @param {BaseCacheEntry} precacheEntry A entry with `path` and `revision`\n   * parameters.\n   * @return {Promise<Boolean>} Returns true if the precacheEntry is already\n   * cached, false otherwise.\n   */\n  _isAlreadyCached(precacheEntry) {\n    var _this = this;\n\n    return asyncToGenerator(function* () {\n      const revisionDetails = yield _this._revisionDetailsModel.get(precacheEntry.entryID);\n      if (revisionDetails !== precacheEntry.revision) {\n        return false;\n      }\n\n      const openCache = yield _this._getCache();\n      const cachedResponse = yield openCache.match(precacheEntry.request);\n      return cachedResponse ? true : false;\n    })();\n  }\n\n  /**\n   * @private\n   * @param {BaseCacheEntry} precacheEntry A file entry with `path` and\n   * `revision` parameters.\n   */\n  _onEntryCached(precacheEntry) {\n    var _this2 = this;\n\n    return asyncToGenerator(function* () {\n      yield _this2._revisionDetailsModel.put(precacheEntry.entryID, precacheEntry.revision);\n    })();\n  }\n\n  /**\n   * This method closes the indexdDB helper. This is used for unit testing\n   * to ensure cleanup between tests.\n   * @private\n   */\n  _close() {\n    this._revisionDetailsModel._close();\n  }\n}\n\n/**\n * This class will take a Request object and parse it into a BaseCacheEntry.\n *\n * @private\n * @memberof module:sw-precaching\n * @extends {module:sw-precaching.BaseCacheEntry}\n */\nclass RequestCacheEntry extends BaseCacheEntry {\n  /**\n   * This is useful for caching unrevisioned requests that require\n   * special headers etc.\n   * @param {Request} request A request to be cached.\n   */\n  constructor(request) {\n    if (!(request instanceof Request)) {\n      throw ErrorFactory$3.createError('invalid-unrevisioned-entry', new Error('Invalid file entry: ' + JSON.stringify(request)));\n    }\n\n    super({\n      entryID: request.url,\n      request: request,\n      cacheBust: false\n    });\n  }\n}\n\n/**\n * This class extends a lot of the internal methods from BaseCacheManager\n * to manage caching of unrevisioned assets.\n *\n * @private\n * @memberof module:sw-precaching\n * @extends {module:sw-precaching.BaseCacheManager}\n */\nclass UnrevisionedCacheManager extends BaseCacheManager {\n  /**\n   * Constructor for UnreivisionedCacheManager\n   */\n  constructor() {\n    super(defaultUnrevisionedCacheName);\n  }\n\n  /**\n   * This method will add the entries to the install list.\n   * This will manage duplicate entries and perform the caching during\n   * the install step.\n   *\n   * @example\n   *\n   * revisionedManager.cache([\n   *   '/styles/hello.css',\n   *   new Request('/images/logo.png', {\n   *     // Custom Request Options.\n   *   })\n   * ]);\n   *\n   * @param {Array<String|Request>} rawEntries A raw entry that can be\n   * parsed into a BaseCacheEntry.\n   */\n  cache(rawEntries) {\n    // This method is here to provide useful docs.\n    super.cache(rawEntries);\n  }\n\n  /**\n   * This method ensures that the file entry in the maniest is valid and\n   * can be parsed as a BaseCacheEntry.\n   *\n   * @private\n   * @abstract\n   * @param {String | Request} input Either a URL string or a Request.\n   * @return {BaseCacheEntry} Returns a parsed version of the file entry.\n   */\n  _parseEntry(input) {\n    if (typeof input === 'undefined' || input === null) {\n      throw ErrorFactory$3.createError('invalid-unrevisioned-entry', new Error('Invalid file entry: ' + JSON.stringify(input)));\n    }\n\n    if (typeof input === 'string') {\n      return new StringCacheEntry(input);\n    } else if (input instanceof Request) {\n      return new RequestCacheEntry(input);\n    } else {\n      throw ErrorFactory$3.createError('invalid-unrevisioned-entry', new Error('Invalid file entry: ' + JSON.stringify(input)));\n    }\n  }\n\n  /**\n   * @private\n   * @param {BaseCacheEntry} newEntry The entry that is to be cached.\n   * @param {BaseCacheEntry} previousEntry The entry that is currently cached.\n   */\n  _onDuplicateInstallEntryFound(newEntry, previousEntry) {}\n  // NOOP. Just ignore duplicate entries.\n\n\n  /**\n   * We always want to override previously cached versions.\n   * @private\n   * @param {BaseCacheEntry} precacheEntry A file entry with `path` and\n   * `revision` parameters.\n   * @return {Promise<Boolean>} Returns true is the fileEntry is already\n   * cached, false otherwise.\n   */\n  _isAlreadyCached(precacheEntry) {\n    return asyncToGenerator(function* () {\n      return false;\n    })();\n  }\n\n  /**\n   * @private\n   * @param {BaseCacheEntry} precacheEntry A file entry with `path` and\n   * `revision` parameters.\n   */\n  _onEntryCached(precacheEntry) {\n    // NOOP\n  }\n}\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\n/**\n * The PrecacheManager is the top level API you are likely to use with\n * the sw-precaching module.\n *\n * This class will set up the install listener and orchestrate the caching\n * of assets.\n *\n * @memberof module:sw-precaching\n */\nclass PrecacheManager {\n  /**\n   * Creating a PrecacheManager will add an install and activate event listener\n   * to your service worker. This allows the manager to cache assets and\n   * tidy up the no longer required assets.\n   */\n  constructor() {\n    this._eventsRegistered = false;\n    this._revisionedManager = new RevisionedCacheManager();\n    this._unrevisionedManager = new UnrevisionedCacheManager();\n    this._registerEvents();\n  }\n\n  /**\n   * @private\n   */\n  _registerEvents() {\n    if (this._eventsRegistered) {\n      // Only need to register events once.\n      return;\n    }\n\n    this._eventsRegistered = true;\n\n    self.addEventListener('install', event => {\n      const promiseChain = Promise.all([this._revisionedManager._performInstallStep(), this._unrevisionedManager._performInstallStep()]).then(() => {\n        // Closed indexedDB now that we are done with the install step\n        this._close();\n      }).catch(err => {\n        this._close();\n\n        throw err;\n      });\n\n      event.waitUntil(promiseChain);\n    });\n\n    self.addEventListener('activate', event => {\n      const promiseChain = Promise.all([this._revisionedManager._cleanUpOldEntries(), this._unrevisionedManager._cleanUpOldEntries()]).then(() => {\n        // Closed indexedDB now that we are done with the install step\n        this._close();\n      }).catch(err => {\n        this._close();\n\n        throw err;\n      });\n\n      event.waitUntil(promiseChain);\n    });\n  }\n\n  /**\n   * To cache revisioned assets (i.e. urls / assets that you have a revision\n   * for) can be efficiently cached and updated with this method.\n   * @param {Object} input\n   * @param {Array<String|Object>} input.revisionedFiles An array of URL strings\n   * , which should have revisioning in the file name (i.e. hello.1234.css)) or\n   * an object with a `url` and `revision` parameter.\n   *\n   * @example\n   * precacheManager.cacheRevisioned({\n   *   revisionedFiles: [\n   *     // Revision is in the file name\n   *     '/styles/main.1234.css',\n   *\n   *     // Object of url and revision can be used as well\n   *     {\n   *       url: '/',\n   *       revision: '1234'\n   *     },\n   *   ]\n   * });\n   */\n  cacheRevisioned({ revisionedFiles } = {}) {\n    assert.isInstance({ revisionedFiles }, Array);\n    this._revisionedManager.cache(revisionedFiles);\n  }\n\n  /**\n   * To cache URLs or assets where you don't know the revisioning, should\n   * be cached with this method. This method will always cache these files\n   * on install, regardless of whether they are already cached or not.\n   * This ensures they are up-to-date after a new service worker install.\n   * @param {Object} input\n   * @param {Array<String|Request>} input.unrevisionedFiles An array of URL\n   * strings or a Request object, which allows you to define custom headers.\n   *\n   * @example\n   * precacheManager.cacheUnrevisioned({\n   *   unrevisionedFiles: [\n   *     // Normal URL string\n   *     '/example/',\n   *\n   *     // Request with headers\n   *     new Request(\n   *       '/user-info.json',\n   *       {\n   *         headers: {\n   *           'CustomHeader': 'Hello World.'\n   *         }\n   *       }\n   *     ),\n   *   ]\n   * });\n   */\n  cacheUnrevisioned({ unrevisionedFiles } = {}) {\n    assert.isInstance({ unrevisionedFiles }, Array);\n    this._unrevisionedManager.cache(unrevisionedFiles);\n  }\n\n  /**\n   * @private\n   */\n  _close() {\n    this._revisionedManager._close();\n  }\n}\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\n/**\n * The precaching module provides helpers that make it easy to cache files\n * during the install step of your service worker.\n *\n * The revisioned caching will cache bust requests where appropriate and\n * only cache assets that have a changed revision asset compared to\n * the currently cached value.\n *\n * @example\n * importScripts('/<Path to Module>/build/sw-precaching.min.js');\n *\n * const precacheManager = new goog.precaching.PrecacheManager();\n * precacheManager.cacheRevisioned({\n *   revisionedFiles: [\n *     '/styles/main.1234.css',\n *     {\n *       url: '/',\n *       revision: '1234'\n *     }\n *   ],\n * });\n *\n * precacheManager.cacheUnrevisioned({\n *   unrevisionedFiles: [\n *     '/',\n *     '/images/logo.png'\n *   ]\n * });\n *\n * @module sw-precaching\n */\nif (!assert.isSWEnv()) {\n  // We are not running in a service worker, print error message\n  throw ErrorFactory$3.createError('not-in-sw');\n}\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\nconst idbName = `sw-cache-expiration-${ self.registration.scope }`;\nconst idbVersion = 1;\nconst urlPropertyName = 'url';\nconst timestampPropertyName = 'timestamp';\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\n/**\n * @memberof module:sw-cache-expiration\n *\n * @example\n * // Used as an automatically invoked as \"behavior\" by a RequestWrapper:\n *\n * const requestWrapper = new goog.runtimeCaching.RequestWrapper({\n *   cacheName: 'runtime-cache',\n *   behaviors: [\n *     new goog.cacheExpiration.Behavior({maxEntries: 10})\n *   ]\n * });\n *\n * // Set up a route to match any requests made against the example.com domain.\n * // The requests will be handled with a stale-while-revalidate policy, and the\n * // cache size will be capped at 10 entries.\n * const route = new goog.routing.RegExpRoute({\n *   match: ({url}) => url.domain === 'example.com',\n *   handler: new goog.runtimeCaching.StaleWhileRevalidate({requestWrapper})\n * });\n *\n * @example\n * // Explicitly invoked usage independent of the goog.routing framework, via\n * // the expireOldEntries() method:\n *\n * // TODO: Write sample code.\n */\nclass Behavior {\n  /**\n   * Creates a new `Behavior` instance, which is used to remove entries from a\n   * [`Cache`](https://developer.mozilla.org/en-US/docs/Web/API/Cache) once\n   * certain criteria—maximum number of entries, age of entry, or both—is met.\n   *\n   * @param {Object} input The input object to this function.\n   * @param {Number} [input.maxEntries] The maximum size of the cache. Entries\n   *        will be expired using a LRU policy once the cache reaches this size.\n   * @param {Number} [input.maxAgeSeconds] The maximum age for fresh entries.\n   */\n  constructor({ maxEntries, maxAgeSeconds } = {}) {\n    assert.atLeastOne({ maxEntries, maxAgeSeconds });\n    if (maxEntries !== undefined) {\n      assert.isType({ maxEntries }, 'number');\n    }\n    if (maxAgeSeconds !== undefined) {\n      assert.isType({ maxAgeSeconds }, 'number');\n    }\n\n    this.maxEntries = maxEntries;\n    this.maxAgeSeconds = maxAgeSeconds;\n\n    // These are used to keep track of open IndexDB and Caches for a given name.\n    this._dbs = new Map();\n    this._caches = new Map();\n  }\n\n  /**\n   * Returns a promise for the IndexedDB database used to keep track of state.\n   *\n   * @private\n   * @param {Object} input The input object to this function.\n   * @param {string} input.cacheName Name of the cache the Responses belong to.\n   * @return {DB} An open DB instance.\n   */\n  getDB({ cacheName }) {\n    var _this = this;\n\n    return asyncToGenerator(function* () {\n      if (!_this._dbs.has(cacheName)) {\n        const openDb = yield idb.open(idbName, idbVersion, function (upgradeDB) {\n          const objectStore = upgradeDB.createObjectStore(cacheName, { keyPath: urlPropertyName });\n          objectStore.createIndex(timestampPropertyName, timestampPropertyName, { unique: false });\n        });\n        _this._dbs.set(cacheName, openDb);\n      }\n\n      return _this._dbs.get(cacheName);\n    })();\n  }\n\n  /**\n   * Returns a promise for an open Cache instance named `cacheName`.\n   *\n   * @private\n   * @param {Object} input The input object to this function.\n   * @param {string} input.cacheName Name of the cache the Responses belong to.\n   * @return {Cache} An open Cache instance.\n   */\n  getCache({ cacheName }) {\n    var _this2 = this;\n\n    return asyncToGenerator(function* () {\n      if (!_this2._caches.has(cacheName)) {\n        const openCache = yield caches.open(cacheName);\n        _this2._caches.set(cacheName, openCache);\n      }\n\n      return _this2._caches.get(cacheName);\n    })();\n  }\n\n  /**\n   * A \"lifecycle\" callback that will be triggered automatically by the\n   * goog.runtimeCaching handlers when an entry is added to a cache.\n   *\n   * Developers would normally not call this method directly; instead,\n   * [`updateTimestamp`](#updateTimestamp) combined with\n   * [`expireEntries`](#expireEntries) provides equivalent behavior.\n   *\n   * @private\n   * @param {Object} input The input object to this function.\n   * @param {string} input.cacheName Name of the cache the Responses belong to.\n   * @param {Response} input.newResponse The new value in the cache.\n   */\n  cacheDidUpdate({ cacheName, newResponse } = {}) {\n    assert.isType({ cacheName }, 'string');\n    assert.isInstance({ newResponse }, Response);\n\n    const now = Date.now();\n    this.updateTimestamp({ cacheName, now, url: newResponse.url }).then(() => {\n      this.expireEntries({ cacheName, now });\n    });\n  }\n\n  /**\n   * Updates the timestamp stored in IndexedDB for `url` to be equal to `now`.\n   *\n   * @param {Object} input The input object to this function.\n   * @param {string} input.cacheName Name of the cache the Responses belong to.\n   * @param {string} input.url\n   * @param {Number} [input.now] A timestamp. Defaults to the current time.\n   */\n  updateTimestamp({ cacheName, url, now }) {\n    var _this3 = this;\n\n    return asyncToGenerator(function* () {\n      assert.isType({ url }, 'string');\n\n      if (typeof now === 'undefined') {\n        now = Date.now();\n      }\n\n      const db = yield _this3.getDB({ cacheName });\n      const tx = db.transaction(cacheName, 'readwrite');\n      tx.objectStore(cacheName).put({\n        [timestampPropertyName]: now,\n        [urlPropertyName]: url\n      });\n\n      yield tx.complete;\n    })();\n  }\n\n  /**\n   * Expires entries, both based on the the maximum age and the maximum number\n   * of entries, depending on how this instance is configured.\n   *\n   * @param {Object} input The input object to this function.\n   * @param {string} input.cacheName Name of the cache the Responses belong to.\n   * @param {Number} [input.now] A timestamp. Defaults to the current time.\n   * @return {Array<string>} A list of the URLs that were expired.\n   */\n  expireEntries({ cacheName, now } = {}) {\n    var _this4 = this;\n\n    return asyncToGenerator(function* () {\n      if (typeof now === 'undefined') {\n        now = Date.now();\n      }\n\n      // First, expire old entries, if maxAgeSeconds is set.\n      const oldEntries = _this4.maxAgeSeconds ? yield _this4.findOldEntries({ cacheName, now }) : [];\n\n      // Once that's done, check for the maximum size.\n      const extraEntries = _this4.maxEntries ? yield _this4.findExtraEntries({ cacheName }) : [];\n\n      // Use a Set to remove any duplicates following the concatenation, then\n      // convert back into an array.\n      const urls = [...new Set(oldEntries.concat(extraEntries))];\n      yield _this4.deleteFromCacheAndIDB({ cacheName, urls });\n\n      return urls;\n    })();\n  }\n\n  /**\n   * Expires entries based on the the maximum age.\n   *\n   * @private\n   * @param {Object} input The input object to this function.\n   * @param {string} input.cacheName Name of the cache the Responses belong to.\n   * @param {Number} [input.now] A timestamp.\n   * @return {Array<string>} A list of the URLs that were expired.\n   */\n  findOldEntries({ cacheName, now } = {}) {\n    var _this5 = this;\n\n    return asyncToGenerator(function* () {\n      assert.isType({ now }, 'number');\n\n      const expireOlderThan = now - _this5.maxAgeSeconds * 1000;\n      const urls = [];\n      const db = yield _this5.getDB({ cacheName });\n      const tx = db.transaction(cacheName, 'readonly');\n      const store = tx.objectStore(cacheName);\n      const timestampIndex = store.index(timestampPropertyName);\n\n      timestampIndex.iterateCursor(function (cursor) {\n        if (!cursor) {\n          return;\n        }\n\n        if (cursor.value[timestampPropertyName] < expireOlderThan) {\n          urls.push(cursor.value[urlPropertyName]);\n        }\n\n        cursor.continue();\n      });\n\n      yield tx.complete;\n      return urls;\n    })();\n  }\n\n  /**\n   * Expires entries base on the the maximum cache size.\n   *\n   * @private\n   * @param {Object} input The input object to this function.\n   * @param {string} input.cacheName Name of the cache the Responses belong to.\n   * @return {Array<string>} A list of the URLs that were expired.\n   */\n  findExtraEntries({ cacheName }) {\n    var _this6 = this;\n\n    return asyncToGenerator(function* () {\n      const urls = [];\n      const db = yield _this6.getDB({ cacheName });\n      const tx = db.transaction(cacheName, 'readonly');\n      const store = tx.objectStore(cacheName);\n      const timestampIndex = store.index(timestampPropertyName);\n      const initialCount = yield timestampIndex.count();\n\n      if (initialCount > _this6.maxEntries) {\n        timestampIndex.iterateCursor(function (cursor) {\n          if (!cursor) {\n            return;\n          }\n\n          urls.push(cursor.value[urlPropertyName]);\n\n          if (initialCount - urls.length > _this6.maxEntries) {\n            cursor.continue();\n          }\n        });\n      }\n\n      yield tx.complete;\n      return urls;\n    })();\n  }\n\n  /**\n   * Removes entries corresponding to each of the URLs from both the Cache\n   * Storage API and from IndexedDB.\n   *\n   * @private\n   * @param {Object} input The input object to this function.\n   * @param {string} input.cacheName Name of the cache the Responses belong to.\n   * @param {Array<string>} urls The URLs to delete.\n   */\n  deleteFromCacheAndIDB({ cacheName, urls } = {}) {\n    var _this7 = this;\n\n    return asyncToGenerator(function* () {\n      assert.isInstance({ urls }, Array);\n\n      if (urls.length > 0) {\n        const cache = yield _this7.getCache({ cacheName });\n        const db = yield _this7.getDB({ cacheName });\n\n        yield urls.forEach((() => {\n          var _ref = asyncToGenerator(function* (url) {\n            yield cache.delete(url);\n            const tx = db.transaction(cacheName, 'readwrite');\n            const store = tx.objectStore(cacheName);\n            yield store.delete(url);\n            yield tx.complete;\n          });\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        })());\n      }\n    })();\n  }\n}\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\n/**\n * sw-cache-expiration Module\n * @module sw-cache-expiration\n */\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\n/**\n * The value `'CACHE_UPDATED'`, used as the `type` field of the update message.\n *\n * @memberof module:sw-broadcast-cache-update\n * @type {string}\n */\nconst cacheUpdatedMessageType = 'CACHE_UPDATED';\n\n/**\n * The default headers to compare when determining whether two `Response`\n * objects are different.\n *\n * @private\n * @type {Array<string>}\n */\nconst defaultHeadersToCheck = ['content-length', 'etag', 'last-modified'];\n\n/**\n * The value `'sw-broadcast-cache-update'`, used as the `meta` field of the\n * update message.\n *\n * @private\n * @type {string}\n */\nconst defaultSource = 'sw-broadcast-cache-update';\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\n/**\n * Uses the {@link https://developers.google.com/web/updates/2016/09/broadcastchannel|Broadcast Channel API}\n * to notify interested subscribers about a change to a cached resource.\n *\n * You would not normally call this method directly; it's called automatically\n * by an instance of the {@link Behavior} class. It's exposed here for the\n * benefit of developers who would rather not use the full `Behavior`\n * implementation.\n *\n * The message that's posted takes the following format, inspired by the\n * [Flux standard action](https://github.com/acdlite/flux-standard-action#introduction)\n * format. (Usage of [Flux](https://facebook.github.io/flux/) itself is not at\n * all required.)\n *\n * ```\n * {\n *   type: 'CACHE_UPDATED',\n *   meta: 'sw-broadcast-cache-update',\n *   payload: {\n *     cacheName: 'the-cache-name',\n *     updatedUrl: 'https://example.com/'\n *   }\n * }\n * ```\n *\n * @memberof module:sw-broadcast-cache-update\n * @type {function}\n *\n * @param {Object} input\n * @param {BroadcastChannel} input.channel The `BroadcastChannel` to use.\n * @param {string} input.cacheName The name of the cache in which the updated\n *        `Response` was stored.\n * @param {string} input.url The URL associated with the updated `Response`.\n * @param {string} input.source A string identifying this library as the source\n *        of the update message.\n */\nfunction broadcastUpdate({ channel, cacheName, url, source }) {\n  assert.isInstance({ channel }, BroadcastChannel);\n  assert.isType({ cacheName }, 'string');\n  assert.isType({ source }, 'string');\n  assert.isType({ url }, 'string');\n\n  channel.postMessage({\n    type: cacheUpdatedMessageType,\n    meta: source,\n    payload: {\n      cacheName: cacheName,\n      updatedUrl: url\n    }\n  });\n}\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\n/**\n * Given two `Response`s, compares several header values to see if they are\n * the same or not.\n *\n * @memberof module:sw-broadcast-cache-update\n * @type {function}\n *\n * @param {Object} input\n * @param {Response} input.first One of the `Response`s.\n * @param {Response} input.second Another of the `Response`s.\n * @param {Array<string>} input.headersToCheck A list of headers that will be\n *        used to determine whether the `Response`s differ.\n * @return {boolean} Whether or not the `Response` objects are assumed to be\n *         the same.\n */\nfunction responsesAreSame({ first, second, headersToCheck }) {\n  assert.isInstance({ first }, Response);\n  assert.isInstance({ second }, Response);\n  assert.isInstance({ headersToCheck }, Array);\n\n  return headersToCheck.every(header => {\n    return first.headers.has(header) === second.headers.has(header) && first.headers.get(header) === second.headers.get(header);\n  });\n}\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\n/**\n * @memberof module:sw-broadcast-cache-update\n *\n * @example\n * // Used as an automatically invoked as \"behavior\" by a RequestWrapper:\n *\n * const requestWrapper = new goog.runtimeCaching.RequestWrapper({\n *   cacheName: 'runtime-cache',\n *   behaviors: [\n *     new goog.broadcastCacheUpdate.Behavior({channelName: 'cache-updates'})\n *   ]\n * });\n *\n * // Set up a route to match any requests made against the example.com domain.\n * // The requests will be handled with a stale-while-revalidate policy, and the\n * // cache update notification behavior, as configured in requestWrapper, will\n * // be automatically applied.\n * const route = new goog.routing.RegExpRoute({\n *   match: ({url}) => url.domain === 'example.com',\n *   handler: new goog.runtimeCaching.StaleWhileRevalidate({requestWrapper})\n * });\n *\n * @example\n * // Explicitly invoked usage independent of the goog.routing framework, via\n * // the notifyIfUpdated() method:\n *\n * const cacheUpdateBehavior = new goog.broadcastCacheUpdates.Behavior({\n *   channelName: 'cache-updates'\n * });\n *\n * const url = 'https://example.com';\n * const cacheName = 'runtime-cache';\n *\n * const cache = await caches.open(cacheName);\n * const oldResponse = await cache.match(url);\n * const newResponse = await fetch(url);\n * await cache.put(url, newResponse);\n *\n * // Only check for an update if there was a previously cached Response.\n * if (oldResponse) {\n *   cacheUpdateBehavior.notifyIfUpdated({\n *     first: oldResponse,\n *     second: newResponse,\n *     cacheName\n *   });\n * }\n */\nclass Behavior$1 {\n  /**\n   * Creates a new `Behavior` instance, which is used to compare two\n   * [Responses](https://developer.mozilla.org/en-US/docs/Web/API/Response)\n   * and use the {@link https://developers.google.com/web/updates/2016/09/broadcastchannel|Broadcast Channel API}\n   * to notify interested parties when those Responses differ.\n   *\n   * For efficiency's sake, the underlying response bodies are not compared;\n   * only specific response headers are checked.\n   *\n   * @param {Object} input The input object to this function.\n   * @param {string} input.channelName The name that will be used when creating\n   *        the [`BroadcastChannel`](https://developer.mozilla.org/en-US/docs/Web/API/BroadcastChannel/BroadcastChannel).\n   * @param {Array<string>} input.headersToCheck A list of headers that will be\n   *        used to determine whether the `Response`s differ. If not provided,\n   *        the values `['content-length', 'etag', 'last-modified']` are used.\n   * @param {string} input.source An attribution value that will be used in the\n   *        broadcast message to indicate where the update originated. If not\n   *        provided, a\n   *        {@link constants#defaultSource|default value} will be used.\n   */\n  constructor({ channelName, headersToCheck, source }) {\n    assert.isType({ channelName }, 'string');\n\n    this.channelName = channelName;\n    this.headersToCheck = headersToCheck || defaultHeadersToCheck;\n    this.source = source || defaultSource;\n  }\n\n  /**\n   * @private\n   * @return {BroadcastChannel} The underlying\n   *          [`BroadcastChannel`](https://developer.mozilla.org/en-US/docs/Web/API/BroadcastChannel/BroadcastChannel)\n   *          instance used for broadcasting updates.\n   */\n  get channel() {\n    if (!this._channel) {\n      this._channel = new BroadcastChannel(this.channelName);\n    }\n    return this._channel;\n  }\n\n  /**\n   * A \"lifecycle\" callback that will be triggered automatically by the\n   * goog.runtimeCaching handlers when an entry is added to a cache.\n   *\n   * Developers would normally not call this method directly; instead,\n   * [`notifyIfUpdated`](#notifyIfUpdated) provides equivalent functionality\n   * with a slightly more efficient interface.\n   *\n   * @private\n   * @param {Object} input The input object to this function.\n   * @param {string} input.cacheName Name of the cache the Responses belong to.\n   * @param {Response} [input.oldResponse] The previous cached value, if any.\n   * @param {Response} input.newResponse The new value in the cache.\n   */\n  cacheDidUpdate({ cacheName, oldResponse, newResponse }) {\n    assert.isType({ cacheName }, 'string');\n    assert.isInstance({ newResponse }, Response);\n\n    if (oldResponse) {\n      this.notifyIfUpdated({\n        cacheName,\n        first: oldResponse,\n        second: newResponse });\n    }\n  }\n\n  /**\n   * An explicit method to call from your own code to trigger the comparison of\n   * two [Response](https://developer.mozilla.org/en-US/docs/Web/API/Response)\n   * and fire off a notification via the\n   * {@link https://developers.google.com/web/updates/2016/09/broadcastchannel|Broadcast Channel API}\n   * if they differ.\n   *\n   * @param {Object} input The input object to this function.\n   * @param {Response} input.first One of the responses to compare.\n   *        This should not be an {@link http://stackoverflow.com/questions/39109789|opaque response}.\n   * @param {Response} input.second Another of the respones to compare.\n   *        This should not be an {@link http://stackoverflow.com/questions/39109789|opaque response}.\n   * @param {string} input.cacheName Name of the cache the Responses belong to.\n   */\n  notifyIfUpdated({ first, second, cacheName }) {\n    assert.isType({ cacheName }, 'string');\n\n    if (!responsesAreSame({ first, second, headersToCheck: this.headersToCheck })) {\n      broadcastUpdate({ cacheName, url: second.url,\n        channel: this.channel, source: this.source });\n    }\n  }\n}\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\n/**\n * sw-broadcast-cache-update Module\n * @module sw-broadcast-cache-update\n */\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\n/**\n * The default cache name, used by RequestWrapper when there's no name provided.\n * It combines a constant prefix with the `registration.scope` value associated\n * with the current service worker, ensuring that multiple service workers used\n * on the same origin will have different default caches.\n *\n * @type {string}\n * @memberof module:sw-runtime-caching\n */\nconst defaultCacheName = `sw-runtime-caching-${ self.registration.scope }`;\n\n/**\n * A list of the callback methdo names that the RequestWrapper might trigger.\n *\n * @private\n * @type {Array.<string>}\n * @memberof module:sw-runtime-caching\n */\nconst behaviorCallbacks = ['cacheDidUpdate', 'cacheWillUpdate', 'fetchDidFail', 'requestWillFetch'];\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\nconst errors$2 = {\n    'multiple-cache-will-update-behaviors': 'You cannot register more than one ' + 'behavior that implements cacheWillUpdate.'\n};\n\nvar ErrorFactory$4 = new ErrorFactory$1(errors$2);\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\n/**\n * This class is used by the various subclasses of `Handler` to configure the\n * cache name and any desired request/cache behaviors.\n *\n * It automatically triggers any registered behaviors at the appropriate time.\n * The current set of behavior callbacks, along with the parameters they're\n * given and when they're called, is:\n *\n *   - `cacheDidUpdate({cacheName, oldResponse, newResponse})`: Called whenever\n *   a new entry is written to the cache.\n *   - `fetchDidFail({request})`: Called whenever a network request fails.\n *   - `requestWillFetch({request})`: Called prior to making a network request.\n *\n * @memberof module:sw-runtime-caching\n */\nclass RequestWrapper {\n  /**\n   * @param {string} [cacheName] The name of the cache to use for Handlers that\n   *        involve caching. If none is provided, a default name that uses the\n   *        current service worker scope will be used.\n   * @param {Array.<Object>} [behaviors] Any behaviors that should be invoked.\n   * @param {Object} [fetchOptions] Values passed along to the\n   *        [`init`](https://developer.mozilla.org/en-US/docs/Web/API/GlobalFetch/fetch#Parameters)\n   *        of all `fetch()` requests made by this wrapper.\n   * @param {Object} [matchOptions] Values passed along to the\n   *        [`options`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/match#Parameters)\n   *        of all cache `match()` requests made by this wrapper.\n   */\n  constructor({ cacheName, behaviors, fetchOptions, matchOptions } = {}) {\n    if (cacheName) {\n      assert.isType({ cacheName }, 'string');\n      this.cacheName = cacheName;\n    } else {\n      this.cacheName = defaultCacheName;\n    }\n\n    if (fetchOptions) {\n      assert.isType({ fetchOptions }, 'object');\n      this.fetchOptions = fetchOptions;\n    }\n\n    if (matchOptions) {\n      assert.isType({ matchOptions }, 'object');\n      this.matchOptions = matchOptions;\n    }\n\n    this.behaviorCallbacks = {};\n\n    if (behaviors) {\n      assert.isInstance({ behaviors }, Array);\n\n      behaviors.forEach(behavior => {\n        for (let callbackName of behaviorCallbacks) {\n          if (typeof behavior[callbackName] === 'function') {\n            if (!this.behaviorCallbacks[callbackName]) {\n              this.behaviorCallbacks[callbackName] = [];\n            }\n            this.behaviorCallbacks[callbackName].push(behavior[callbackName].bind(behavior));\n          }\n        }\n      });\n    }\n\n    if (this.behaviorCallbacks.cacheWillUpdate) {\n      if (this.behaviorCallbacks.cacheWillUpdate.length !== 1) {\n        throw ErrorFactory$4.createError('multiple-cache-will-update-behaviors');\n      }\n    }\n  }\n\n  /**\n   * @return {Cache} The cache for this RequestWrapper.\n   */\n  getCache() {\n    var _this = this;\n\n    return asyncToGenerator(function* () {\n      if (!_this._cache) {\n        _this._cache = yield caches.open(_this.cacheName);\n      }\n      return _this._cache;\n    })();\n  }\n\n  /**\n   * Wraps `cache.match()`, using the previously configured cache name and match\n   * options.\n   *\n   * @param {Object} input\n   * @param {Request|string} input.request The key for the cache lookup.\n   * @return {Promise.<Response>} The cached response.\n   */\n  match({ request }) {\n    var _this2 = this;\n\n    return asyncToGenerator(function* () {\n      assert.atLeastOne({ request });\n\n      const cache = yield _this2.getCache();\n      return yield cache.match(request, _this2.matchOptions);\n    })();\n  }\n\n  /**\n   * Wraps `fetch()`, and calls any `fetchDidFail` callbacks from the\n   * registered behaviors if the request fails.\n   *\n   * @param {Object} input\n   * @param {Request|string} input.request The request or URL to be fetched.\n   * @return {Promise.<Response>} The network response.\n   */\n  fetch({ request }) {\n    var _this3 = this;\n\n    return asyncToGenerator(function* () {\n      assert.atLeastOne({ request });\n\n      return yield fetch(request, _this3.fetchOptions).catch(function (error) {\n        if (_this3.behaviorCallbacks.fetchDidFail) {\n          for (let callback of _this3.behaviorCallbacks.fetchDidFail) {\n            callback({ request });\n          }\n        }\n\n        throw error;\n      });\n    })();\n  }\n\n  /**\n   * Combines both fetching and caching, using the previously configured options\n   * and calling the appropriate behaviors.\n   *\n   * By default, responses with a status of [2xx](https://fetch.spec.whatwg.org/#ok-status)\n   * will be considered valid and cacheable, but this could be overridden by\n   * configuring one or more behaviors that implement the `cacheWillUpdate`\n   * lifecycle callback.\n   *\n   * @param {Object} input\n   * @param {Request} input.request The request to fetch.\n   * @param {boolean} [input.waitOnCache] `true` means the method should wait\n   *        for the cache.put() to complete before returning. The default value\n   *        of `false` means return without waiting.\n   * @return {Promise.<Response>} The network response.\n   */\n  fetchAndCache({ request, waitOnCache }) {\n    var _this4 = this;\n\n    return asyncToGenerator(function* () {\n      assert.atLeastOne({ request });\n\n      let cachingComplete;\n      const response = yield _this4.fetch({ request });\n\n      // .ok is true if the response status is 2xx. That's the default condition.\n      let cacheable = response.ok;\n      if (_this4.behaviorCallbacks.cacheWillUpdate) {\n        cacheable = _this4.behaviorCallbacks.cacheWillUpdate[0]({ request, response });\n      }\n\n      if (cacheable) {\n        const newResponse = response.clone();\n\n        // cacheDelay is a promise that may or may not be used to delay the\n        // completion of this method, depending on the value of `waitOnCache`.\n        cachingComplete = _this4.getCache().then((() => {\n          var _ref = asyncToGenerator(function* (cache) {\n            let oldResponse;\n\n            // Only bother getting the old response if the new response isn't opaque\n            // and there's at least one cacheDidUpdateCallbacks. Otherwise, we don't\n            // need it.\n            if (response.type !== 'opaque' && _this4.behaviorCallbacks.cacheDidUpdate) {\n              oldResponse = yield _this4.match({ request });\n            }\n\n            // Regardless of whether or not we'll end up invoking\n            // cacheDidUpdateCallbacks, wait until the cache is updated.\n            yield cache.put(request, newResponse);\n\n            for (let callback of _this4.behaviorCallbacks.cacheDidUpdate || []) {\n              callback({ cacheName: _this4.cacheName, oldResponse, newResponse });\n            }\n          });\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        })());\n      }\n\n      // Only conditionally await the caching completion, giving developers the\n      // option of returning early for, e.g., read-through-caching scenarios.\n      if (waitOnCache && cachingComplete) {\n        yield cachingComplete;\n      }\n\n      return response;\n    })();\n  }\n}\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\n/**\n * This a base class meant to be extended by other classes that implement\n * specific request strategies.\n *\n * @memberof module:sw-runtime-caching\n */\nclass Handler {\n  /**\n   * @param {Object} input\n   * @param {RequestWrapper} [input.requestWrapper] An optional `RequestWrapper`\n   *        that is used to configure the cache name and request behaviors. If\n   *        not provided, a new `RequestWrapper` using the\n   *        [default cache name](#defaultCacheName) will be used.\n   */\n  constructor({ requestWrapper } = {}) {\n    if (requestWrapper) {\n      this.requestWrapper = requestWrapper;\n    } else {\n      this.requestWrapper = new RequestWrapper();\n    }\n  }\n\n  /**\n   * An abstract method that each subclass must implement.\n   *\n   * @abstract\n   * @param {Object} input\n   * @param {FetchEvent} input.event The event that triggered the service\n   *        worker's fetch handler.\n   * @param {Object} [input.params] Additional parameters that might be passed\n   *        in to the method. If used in conjunction with the `Route` class,\n   *        then the return value from the `match` function in `Route` will\n   *        be passed in via this parameter.\n   * @return {Promise.<Response>} A response, obtained from whichever strategy\n   *         is implemented.\n   */\n  handle({ event, params } = {}) {\n    throw Error('This abstract method must be implemented in a subclass.');\n  }\n}\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\n/**\n * @memberof module:sw-runtime-caching\n * @extends module:sw-runtime-caching.Handler\n */\nclass CacheFirst extends Handler {\n  /**\n   * An implementation of a [cache-first](https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#cache-falling-back-to-network)\n   * request strategy.\n   *\n   * @alias CacheFirst.handle\n   * @param {Object} input\n   * @param {FetchEvent} input.event The event that triggered the service\n   *        worker's fetch handler.\n   * @return {Promise.<Response>} The response, either from the cache,\n   *          or if that isn't available, from the network.\n   */\n  handle({ event } = {}) {\n    var _this = this;\n\n    return asyncToGenerator(function* () {\n      assert.isInstance({ event }, FetchEvent);\n\n      const cachedResponse = yield _this.requestWrapper.match({\n        request: event.request\n      });\n\n      return cachedResponse || (yield _this.requestWrapper.fetchAndCache({\n        request: event.request\n      }));\n    })();\n  }\n}\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\n/**\n * @memberof module:sw-runtime-caching\n * @extends module:sw-runtime-caching.Handler\n */\nclass CacheOnly extends Handler {\n  /**\n   * An implementation of a [cache-only](https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#cache-only)\n   * request strategy.\n   *\n   * The advantage to using this vs. directly calling `caches.match()` is that\n   * it will use the cache configuration and trigger the behaviors defined in\n   * the underlying `RequestWrapper`.\n   *\n   * @alias CacheOnly.handle\n   * @param {Object} input An object wrapper for the underlying parameters.\n   * @param {FetchEvent} input.event The event that triggered the service\n   *        worker's fetch handler.\n   * @return {Promise.<Response>} The response from the cache.\n   */\n  handle({ event } = {}) {\n    var _this = this;\n\n    return asyncToGenerator(function* () {\n      assert.isInstance({ event }, FetchEvent);\n\n      return yield _this.requestWrapper.match({ request: event.request });\n    })();\n  }\n}\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\n/**\n * @memberof module:sw-runtime-caching\n * @extends module:sw-runtime-caching.Handler\n */\nclass NetworkFirst extends Handler {\n  /**\n   * An implementation of a [network first](https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#network-falling-back-to-cache)\n   * request strategy.\n   *\n   * @alias NetworkFirst.handle\n   * @param {Object} input An object wrapper for the underlying parameters.\n   * @param {FetchEvent} input.event The event that triggered the service\n   *        worker's fetch handler.\n   * @return {Promise.<Response>} The response from the network, or if that's\n   *          not available, a previously cached response.\n   */\n  handle({ event } = {}) {\n    var _this = this;\n\n    return asyncToGenerator(function* () {\n      assert.isInstance({ event }, FetchEvent);\n\n      let response;\n      try {\n        response = yield _this.requestWrapper.fetchAndCache({\n          request: event.request\n        });\n        if (response) {\n          return response;\n        }\n      } catch (error) {\n        // no-op\n      }\n\n      return yield _this.requestWrapper.match({ request: event.request });\n    })();\n  }\n}\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\n/**\n * @memberof module:sw-runtime-caching\n * @extends module:sw-runtime-caching.Handler\n */\nclass NetworkOnly extends Handler {\n  /**\n   * An implementation of a [network-only](https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#network-only)\n   * request strategy.\n   *\n   * The advantage to using this vs. directly calling `fetch()` is that it will\n   * trigger the behaviors defined in the underlying `RequestWrapper`.\n   *\n   * @alias NetworkOnly.handle\n   * @param {Object} input An object wrapper for the underlying parameters.\n   * @param {FetchEvent} input.event The event that triggered the service\n   *        worker's fetch handler.\n   * @return {Promise.<Response>} The response from the network.\n   */\n  handle({ event } = {}) {\n    var _this = this;\n\n    return asyncToGenerator(function* () {\n      assert.isInstance({ event }, FetchEvent);\n\n      return yield _this.requestWrapper.fetch({ request: event.request });\n    })();\n  }\n}\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\n/**\n * @memberof module:sw-runtime-caching\n * @extends module:sw-runtime-caching.Handler\n */\nclass StaleWhileRevalidate extends Handler {\n  /**\n   * An implementation of a [stale-while-revalidate](https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#stale-while-revalidate)\n   * request strategy.\n   *\n   * In addition to updating the appropriate caches, if will also trigger any\n   * appropriate behaviors defined in the underlying `RequestWrapper`.\n   *\n   * @alias StaleWhileRevalidate.handle\n   * @param {Object} input An object wrapper for the underlying parameters.\n   * @param {FetchEvent} input.event The event that triggered the service\n   *        worker's fetch handler.\n   * @return {Promise.<Response>} The response from the cache, if present, or\n   *          from the network if not.\n   */\n  handle({ event } = {}) {\n    var _this = this;\n\n    return asyncToGenerator(function* () {\n      assert.isInstance({ event }, FetchEvent);\n\n      const fetchAndCacheResponse = _this.requestWrapper.fetchAndCache({\n        request: event.request\n      }).catch(function () {\n        return Response.error();\n      });\n      const cachedResponse = yield _this.requestWrapper.match({\n        request: event.request\n      });\n\n      return cachedResponse || (yield fetchAndCacheResponse);\n    })();\n  }\n}\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\n/**\n * sw-runtime-caching Module\n *\n * @module sw-runtime-caching\n */\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\n/* eslint-env browser, serviceworker */\n\n/**\n * This is a high level library to help with using service worker\n * precaching and run time caching.\n *\n * @memberof module:sw-lib\n */\nclass SWLib {\n  /**\n   * Initialises an instance of SWLib. An instance of this class is\n   * accessible when the module is imported into a service worker as\n   * `self.goog.swlib`.\n   */\n  constructor() {\n    this._router = new RouterWrapper();\n    this._precacheManager = new PrecacheManager();\n  }\n\n  /**\n   * Revisioned assets can be cached intelligently\n   * during the install (i.e. old files are cleared from the cache, new files\n   * are added to the cache and unchanged files are left as is).\n   *\n   * @example\n   * self.goog.swlib.cacheRevisionedAssets([\n   *     '/styles/main.1234.css',\n   *     {\n   *       url: '/index.html',\n   *       revision: '1234'\n   *     }\n   * ]);\n   *\n   * @param {Array<String|Object>} revisionedFiles A set of urls to cache\n   * when the service worker is installed.\n   */\n  cacheRevisionedAssets(revisionedFiles) {\n    // Add a more helpful error message than assertion error.\n    if (!Array.isArray(revisionedFiles)) {\n      throw ErrorFactory.createError('bad-revisioned-cache-list');\n    }\n\n    this._precacheManager.cacheRevisioned({\n      revisionedFiles\n    });\n  }\n\n  /**\n   * Any assets you wish to cache ahead of time which can't be revisioned\n   * should be cached with this method. All assets are cached on install\n   * regardless of whether an older version of the request is in the cache.\n   *\n   * @example\n   * self.goog.swlib.warmRuntimeCache([\n   *     '/scripts/main.js',\n   *     new Request('/images/logo.png')\n   * ]);\n   *\n   * @param {Array<String|Request>} unrevisionedFiles A set of urls to cache\n   * when the service worker is installed.\n   */\n  warmRuntimeCache(unrevisionedFiles) {\n    // Add a more helpful error message than assertion error.\n    if (!Array.isArray(unrevisionedFiles)) {\n      throw ErrorFactory.createError('bad-revisioned-cache-list');\n    }\n\n    this._precacheManager.cacheUnrevisioned({\n      unrevisionedFiles\n    });\n  }\n\n  /**\n   * A getter for the Router Wrapper.\n   * @return {RouterWrapper} Returns the Router Wrapper\n   */\n  get router() {\n    return this._router;\n  }\n\n  /**\n   * A cache first run-time caching strategy.\n   * @param {Object} options Options object that can be used to define\n   * arguments on the caching strategy.\n   * @return {CacheFirst} The caching handler instance.\n   */\n  cacheFirst(options) {\n    return this._getCachingMechanism(CacheFirst, options);\n  }\n\n  /**\n   * A cache only run-time caching strategy.\n   * @param {Object} options Options object that can be used to define\n   * arguments on the caching strategy.\n   * @return {CacheFirst} The caching handler instance.\n   */\n  cacheOnly(options) {\n    return this._getCachingMechanism(CacheOnly, options);\n  }\n\n  /**\n   * A network first run-time caching strategy.\n   * @param {Object} options Options object that can be used to define\n   * arguments on the caching strategy.\n   * @return {CacheFirst} The caching handler instance.\n   */\n  networkFirst(options) {\n    return this._getCachingMechanism(NetworkFirst, options);\n  }\n\n  /**\n   * A network only run-time caching strategy.\n   * @param {Object} options Options object that can be used to define\n   * arguments on the caching strategy.\n   * @return {CacheFirst} The caching handler instance.\n   */\n  networkOnly(options) {\n    return this._getCachingMechanism(NetworkOnly, options);\n  }\n\n  /**\n   * A stale while revalidate run-time caching strategy.\n   * @param {Object} options Options object that can be used to define\n   * arguments on the caching strategy.\n   * @return {CacheFirst} The caching handler instance.\n   */\n  staleWhileRevalidate(options) {\n    return this._getCachingMechanism(StaleWhileRevalidate, options);\n  }\n\n  /**\n   * @private\n   * @param {Class} HandlerClass The class to be configured and instantiated.\n   * @param {Object} options Options to configure the handler.\n   * @return {Handler} A handler instance configured with the appropriate\n   * behaviours\n   */\n  _getCachingMechanism(HandlerClass, options = {}) {\n    const behaviorParamsToClass = {\n      'cacheExpiration': Behavior,\n      'broadcastCacheUpdate': Behavior$1\n    };\n\n    const wrapperOptions = {\n      behaviors: []\n    };\n\n    if (options['cacheName']) {\n      wrapperOptions['cacheName'] = options['cacheName'];\n    }\n\n    // Iterate over known behaviors and add them to Request Wrapper options.\n    const behaviorKeys = Object.keys(behaviorParamsToClass);\n    behaviorKeys.forEach(behaviorKey => {\n      if (options[behaviorKey]) {\n        const BehaviorClass = behaviorParamsToClass[behaviorKey];\n        const behaviorParams = options[behaviorKey];\n\n        wrapperOptions.behaviors.push(new BehaviorClass(behaviorParams));\n      }\n    });\n\n    // Add custom behaviors.\n    if (options.behaviors) {\n      options.behaviors.forEach(behavior => {\n        wrapperOptions.behaviors.push(behavior);\n      });\n    }\n\n    return new HandlerClass({\n      requestWrapper: new RequestWrapper(wrapperOptions)\n    });\n  }\n}\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\n/* eslint-env browser */\n/* eslint-disable no-console */\n\nif (!assert.isSWEnv()) {\n  // We are not running in a service worker, print error message\n  throw ErrorFactory.createError('not-in-sw');\n}\n\n/**\n * The sw-lib module is a high-level library that makes it easier to\n * configure routes with caching strategies as well as manage precaching\n * of assets during the install step of a service worker.\n *\n * @example\n * importScripts('/<Path to Module>/build/sw-lib.min.js');\n *\n * // cacheRevisionedAssets() can take an array of strings with\n * // the revision details in the url.\n * goog.swlib.cacheRevisionedAssets([\n *     '/styles/main.1234.css',\n *     '/images/logo.abcd.jpg'\n * ]);\n *\n * // Or it can accept objects with the URL and revision data\n * // kept seperate.\n * goog.swlib.cacheRevisionedAssets([\n *     {\n *       url: '/index.html',\n *       revision: '1234'\n *     },\n *     {\n *       url: '/about.html',\n *       revision: 'abcd'\n *     }\n * ]);\n *\n * // If you have assets that aren't revisioned, you can cache them\n * // during the installation of you service worker using warmRuntimeCache()\n * goog.swlib.warmRuntimeCache([\n *     '/scripts/main.js',\n *     '/images/default-avater.png'\n * ]);\n *\n * // warmRuntimeCache can also accept Requests, in case you need greater\n * // control over the request.\n * goog.swlib.warmRuntimeCache([\n *     new Request('/images/logo.png'),\n *     new Request('/api/data.json')\n * ]);\n *\n * goog.swlib.router.registerRoute('/', goog.swlib.cacheFirst);\n * goog.swlib.router.registerRoute('/example/', goog.swlib.networkFirst);\n *\n * @module sw-lib\n */\n\nconst swLibInstance = new SWLib();\nswLibInstance.Route = Route;\n\nreturn swLibInstance;\n\n})));\n"],"sourceRoot":"/source/"}