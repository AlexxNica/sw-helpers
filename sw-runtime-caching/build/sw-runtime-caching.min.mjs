/*
 Copyright 2016 Google Inc. All Rights Reserved.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/
function atLeastOne(a){const b=Object.keys(a);if(!b.some(c=>a[c]!==void 0))throw Error('Please set at least one of the following parameters: '+b.map(c=>`'${c}'`).join(', '))}function hasMethod(a,b){const c=Object.keys(a).pop(),d=typeof a[c][b];if('function'!=d)throw Error(`The '${c}' parameter must be an object that exposes `+`a '${b}' method.`)}function isInstance(a,b){const c=Object.keys(a).pop();if(!(a[c]instanceof b))throw Error(`The '${c}' parameter must be an instance of `+`'${b.name}'`)}function isOneOf(a,b){const c=Object.keys(a).pop();if(!b.includes(a[c]))throw Error(`The '${c}' parameter must be set to one of the `+`following: ${b}`)}function isType(a,b){const c=Object.keys(a).pop(),d=typeof a[c];if(d!==b)throw Error(`The '${c}' parameter has the wrong type. `+`(Expected: ${b}, actual: ${d})`)}function isSWEnv(){return'ServiceWorkerGlobalScope'in self&&self instanceof ServiceWorkerGlobalScope}function isValue(a,b){const c=Object.keys(a).pop(),d=a[c];if(d!==b)throw Error(`The '${c}' parameter has the wrong value. `+`(Expected: ${b}, actual: ${d})`)}var assert={atLeastOne,hasMethod,isInstance,isOneOf,isType,isSWEnv,isValue};const defaultCacheName=`sw-runtime-caching-${self.registration.scope}`,behaviorCallbacks=['cacheDidUpdate','cacheWillUpdate','fetchDidFail','requestWillFetch'];var asyncGenerator=function(){function a(c){this.value=c}function b(c){function d(h,i){try{var j=c[h](i),k=j.value;k instanceof a?Promise.resolve(k.value).then(function(l){d('next',l)},function(l){d('throw',l)}):e(j.done?'return':'normal',j.value)}catch(l){e('throw',l)}}function e(h,i){'return'===h?f.resolve({value:i,done:!0}):'throw'===h?f.reject(i):f.resolve({value:i,done:!1});f=f.next,f?d(f.key,f.arg):g=null}var f,g;this._invoke=function(i,j){return new Promise(function(k,l){var m={key:i,arg:j,resolve:k,reject:l,next:null};g?g=g.next=m:(f=g=m,d(i,j))})},'function'!=typeof c.return&&(this.return=void 0)}return'function'==typeof Symbol&&Symbol.asyncIterator&&(b.prototype[Symbol.asyncIterator]=function(){return this}),b.prototype.next=function(c){return this._invoke('next',c)},b.prototype.throw=function(c){return this._invoke('throw',c)},b.prototype.return=function(c){return this._invoke('return',c)},{wrap:function(c){return function(){return new b(c.apply(this,arguments))}},await:function(c){return new a(c)}}}(),asyncToGenerator=function(a){return function(){var b=a.apply(this,arguments);return new Promise(function(c,d){function e(f,g){try{var h=b[f](g),i=h.value}catch(j){return void d(j)}return h.done?void c(i):Promise.resolve(i).then(function(j){e('next',j)},function(j){e('throw',j)})}return e('next')})}},get=function a(b,c,d){null===b&&(b=Function.prototype);var e=Object.getOwnPropertyDescriptor(b,c);if(e===void 0){var f=Object.getPrototypeOf(b);if(null===f)return void 0;return a(f,c,d)}if('value'in e)return e.value;var g=e.get;return void 0===g?void 0:g.call(d)},set=function a(b,c,d,e){var f=Object.getOwnPropertyDescriptor(b,c);if(f===void 0){var g=Object.getPrototypeOf(b);null!==g&&a(g,c,d,e)}else if('value'in f&&f.writable)f.value=d;else{var h=f.set;h!==void 0&&h.call(e,d)}return d};class RequestWrapper{constructor({cacheName:a,behaviors:b,fetchOptions:c,matchOptions:d}={}){a?(assert.isType({cacheName:a},'string'),this.cacheName=a):this.cacheName=defaultCacheName,c&&(assert.isType({fetchOptions:c},'object'),this.fetchOptions=c),d&&(assert.isType({matchOptions:d},'object'),this.matchOptions=d),this.callbacks={},b&&(assert.isInstance({behaviors:b},Array),b.forEach(e=>{for(let f of behaviorCallbacks)'function'==typeof e[f]&&(this.callbacks[f]||(this.callbacks[f]=[]),this.callbacks[f].push(e[f].bind(e)))}))}getCache(){var a=this;return asyncToGenerator(function*(){return a._cache||(a._cache=yield caches.open(a.cacheName)),a._cache})()}match({request:a}){var b=this;return asyncToGenerator(function*(){assert.atLeastOne({request:a});const c=yield b.getCache();return yield c.match(a,b.matchOptions)})()}fetch({request:a}){var b=this;return asyncToGenerator(function*(){return assert.atLeastOne({request:a}),yield fetch(a,b.fetchOptions).catch(function(c){if(b.callbacks.fetchDidFail)for(let d of b.callbacks.fetchDidFail)d({request:a});throw c})})()}fetchAndCache({request:a}){var b=this;return asyncToGenerator(function*(){assert.atLeastOne({request:a});const c=yield b.fetch({request:a});let d=c.ok;if(b.callbacks.cacheWillUpdate&&(d=b.callbacks.cacheWillUpdate.reduce(function(e,f){return f({newResponse:c})||e},!1)),d){const e=c.clone();b.getCache().then((()=>{var f=asyncToGenerator(function*(g){let h;'opaque'!==c.type&&b.callbacks.cacheDidUpdate&&(h=yield b.match({request:a})),yield g.put(a,e);for(let i of b.callbacks.cacheDidUpdate||[])i({cacheName:b.cacheName,oldResponse:h,newResponse:e})});return function(g){return f.apply(this,arguments)}})())}return c})()}}class Handler{constructor({requestWrapper:a}={}){this.requestWrapper=a?a:new RequestWrapper}handle({event:a,params:b}={}){throw Error('This abstract method must be implemented in a subclass.')}}class CacheFirst extends Handler{handle({event:a}={}){var b=this;return asyncToGenerator(function*(){assert.isInstance({event:a},FetchEvent);const c=yield b.requestWrapper.match({request:a.request});return c||(yield b.requestWrapper.fetchAndCache({request:a.request}))})()}}class CacheOnly extends Handler{handle({event:a}={}){var b=this;return asyncToGenerator(function*(){return assert.isInstance({event:a},FetchEvent),yield b.requestWrapper.match({request:a.request})})()}}class NetworkFirst extends Handler{handle({event:a}={}){var b=this;return asyncToGenerator(function*(){assert.isInstance({event:a},FetchEvent);let c;try{if(c=yield b.requestWrapper.fetchAndCache({request:a.request}),c)return c}catch(d){}return yield b.requestWrapper.match({request:a.request})})()}}class NetworkOnly extends Handler{handle({event:a}={}){var b=this;return asyncToGenerator(function*(){return assert.isInstance({event:a},FetchEvent),yield b.requestWrapper.fetch({request:a.request})})()}}class StaleWhileRevalidate extends Handler{handle({event:a}={}){var b=this;return asyncToGenerator(function*(){assert.isInstance({event:a},FetchEvent);const c=b.requestWrapper.fetchAndCache({request:a.request}).catch(function(){return Response.error()}),d=yield b.requestWrapper.match({request:a.request});return d||(yield c)})()}}export{CacheFirst,CacheOnly,Handler,NetworkFirst,NetworkOnly,RequestWrapper,StaleWhileRevalidate,defaultCacheName};