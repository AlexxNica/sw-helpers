/*
 Copyright 2016 Google Inc. All Rights Reserved.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/
class ErrorFactory$1{constructor(a){this._errors=a}createError(a,b){if(!(a in this._errors))throw new Error(`Unable to generate error '${a}'.`);let c=this._errors[a],d=null;b&&(c+=` [${b.message}]`,d=b.stack);const e=new Error;return e.name=a,e.message=c,e.stack=d,e}}const errors={'not-in-sw':'sw-precaching must be loaded in your service worker file.','invalid-revisioned-entry':`File manifest entries must be either a `+`string with revision info in the url or an object with a 'url' and `+`'revision' parameters.`,'invalid-unrevisioned-entry':``,'bad-cache-bust':`The cache bust parameter must be a boolean.`,'duplicate-entry-diff-revisions':`An attempt was made to cache the same `+`url twice with each having different revisions. This is not supported.`,'request-not-cached':`A request failed the criteria to be cached. By `+`default, only responses with 'response.ok = true' are cached.`,'should-override':'Method should be overridden by the extending class.'};var ErrorFactory=new ErrorFactory$1(errors);function atLeastOne(a){const b=Object.keys(a);if(!b.some(c=>a[c]!==void 0))throw Error('Please set at least one of the following parameters: '+b.map(c=>`'${c}'`).join(', '))}function hasMethod(a,b){const c=Object.keys(a).pop(),d=typeof a[c][b];if('function'!=d)throw Error(`The '${c}' parameter must be an object that exposes `+`a '${b}' method.`)}function isInstance(a,b){const c=Object.keys(a).pop();if(!(a[c]instanceof b))throw Error(`The '${c}' parameter must be an instance of `+`'${b.name}'`)}function isOneOf(a,b){const c=Object.keys(a).pop();if(!b.includes(a[c]))throw Error(`The '${c}' parameter must be set to one of the `+`following: ${b}`)}function isType(a,b){const c=Object.keys(a).pop(),d=typeof a[c];if(d!==b)throw Error(`The '${c}' parameter has the wrong type. `+`(Expected: ${b}, actual: ${d})`)}function isSWEnv(){return'ServiceWorkerGlobalScope'in self&&self instanceof ServiceWorkerGlobalScope}function isValue(a,b){const c=Object.keys(a).pop(),d=a[c];if(d!==b)throw Error(`The '${c}' parameter has the wrong value. `+`(Expected: ${b}, actual: ${d})`)}var assert={atLeastOne,hasMethod,isInstance,isOneOf,isType,isSWEnv,isValue},asyncToGenerator=function(a){return function(){var b=a.apply(this,arguments);return new Promise(function(c,d){function e(f,g){try{var h=b[f](g),i=h.value}catch(j){return void d(j)}return h.done?void c(i):Promise.resolve(i).then(function(j){e('next',j)},function(j){e('throw',j)})}return e('next')})}};class BaseCacheManager{constructor(a){this._entriesToCache=new Map,this._cacheName=a}cache(a){a.forEach(b=>{this._addEntryToInstallList(this._parseEntry(b))})}_addEntryToInstallList(a){const b=a.entryID,c=this._entriesToCache.get(a.entryID);return c?void this._onDuplicateInstallEntryFound(a,c):void this._entriesToCache.set(b,a)}_performInstallStep(){var a=this;return asyncToGenerator(function*(){if(0!==a._entriesToCache.size){const b=[];return a._entriesToCache.forEach(function(c){b.push(a._cacheEntry(c))}),Promise.all(b)}})()}_cacheEntry(a){var b=this;return asyncToGenerator(function*(){const c=yield b._isAlreadyCached(a);if(!c){let d=yield fetch(a.getNetworkRequest(),{credentials:'same-origin',redirect:'follow'});if(d.ok){const e=yield b._getCache();return yield e.put(a.request,d),b._onEntryCached(a)}throw ErrorFactory.createError('request-not-cached',{message:`Failed to get a cacheable response for `+`'${a.request.url}'`})}})()}_cleanUpOldEntries(){var a=this;return asyncToGenerator(function*(){if(yield caches.has(a._cacheName)){const b=[];a._entriesToCache.forEach(function(f){b.push(f.request.url)});const c=yield a._getCache(),d=yield c.keys(),e=d.filter(function(f){return!b.includes(f.url)});return Promise.all(e.map(function(f){return c.delete(f)}))}})()}_getCache(){var a=this;return asyncToGenerator(function*(){return a._cache||(a._cache=yield caches.open(a._cacheName)),a._cache})()}_parseEntry(a){throw ErrorFactory.createError('should-override')}_onDuplicateEntryFound(a,b){throw ErrorFactory.createError('should-override')}_isAlreadyCached(a){throw ErrorFactory.createError('should-override')}_onEntryCached(a){throw ErrorFactory.createError('should-override')}}function createCommonjsModule(a,b){return b={exports:{}},a(b,b.exports),b.exports}var idb=createCommonjsModule(function(a){'use strict';(function(){function b(r){return Array.prototype.slice.call(r)}function c(r){return new Promise(function(s,t){r.onsuccess=function(){s(r.result)},r.onerror=function(){t(r.error)}})}function d(r,s,t){var u,v=new Promise(function(w,x){u=r[s].apply(r,t),c(u).then(w,x)});return v.request=u,v}function e(r,s,t){var u=d(r,s,t);return u.then(function(v){if(v)return new k(v,u.request)})}function f(r,s,t){t.forEach(function(u){Object.defineProperty(r.prototype,u,{get:function(){return this[s][u]},set:function(v){this[s][u]=v}})})}function g(r,s,t,u){u.forEach(function(v){v in t.prototype&&(r.prototype[v]=function(){return d(this[s],v,arguments)})})}function h(r,s,t,u){u.forEach(function(v){v in t.prototype&&(r.prototype[v]=function(){return this[s][v].apply(this[s],arguments)})})}function i(r,s,t,u){u.forEach(function(v){v in t.prototype&&(r.prototype[v]=function(){return e(this[s],v,arguments)})})}function j(r){this._index=r}function k(r,s){this._cursor=r,this._request=s}function l(r){this._store=r}function m(r){this._tx=r,this.complete=new Promise(function(s,t){r.oncomplete=function(){s()},r.onerror=function(){t(r.error)},r.onabort=function(){t(r.error)}})}function n(r,s,t){this._db=r,this.oldVersion=s,this.transaction=new m(t)}function o(r){this._db=r}f(j,'_index',['name','keyPath','multiEntry','unique']),g(j,'_index',IDBIndex,['get','getKey','getAll','getAllKeys','count']),i(j,'_index',IDBIndex,['openCursor','openKeyCursor']),f(k,'_cursor',['direction','key','primaryKey','value']),g(k,'_cursor',IDBCursor,['update','delete']),['advance','continue','continuePrimaryKey'].forEach(function(r){r in IDBCursor.prototype&&(k.prototype[r]=function(){var s=this,t=arguments;return Promise.resolve().then(function(){return s._cursor[r].apply(s._cursor,t),c(s._request).then(function(u){if(u)return new k(u,s._request)})})})}),l.prototype.createIndex=function(){return new j(this._store.createIndex.apply(this._store,arguments))},l.prototype.index=function(){return new j(this._store.index.apply(this._store,arguments))},f(l,'_store',['name','keyPath','indexNames','autoIncrement']),g(l,'_store',IDBObjectStore,['put','add','delete','clear','get','getAll','getKey','getAllKeys','count']),i(l,'_store',IDBObjectStore,['openCursor','openKeyCursor']),h(l,'_store',IDBObjectStore,['deleteIndex']),m.prototype.objectStore=function(){return new l(this._tx.objectStore.apply(this._tx,arguments))},f(m,'_tx',['objectStoreNames','mode']),h(m,'_tx',IDBTransaction,['abort']),n.prototype.createObjectStore=function(){return new l(this._db.createObjectStore.apply(this._db,arguments))},f(n,'_db',['name','version','objectStoreNames']),h(n,'_db',IDBDatabase,['deleteObjectStore','close']),o.prototype.transaction=function(){return new m(this._db.transaction.apply(this._db,arguments))},f(o,'_db',['name','version','objectStoreNames']),h(o,'_db',IDBDatabase,['close']),['openCursor','openKeyCursor'].forEach(function(r){[l,j].forEach(function(s){s.prototype[r.replace('open','iterate')]=function(){var t=b(arguments),u=t[t.length-1],v=this._store||this._index,w=v[r].apply(v,t.slice(0,-1));w.onsuccess=function(){u(w.result)}}})}),[j,l].forEach(function(r){r.prototype.getAll||(r.prototype.getAll=function(s,t){var u=this,v=[];return new Promise(function(w){u.iterateCursor(s,function(x){return x?(v.push(x.value),void 0!==t&&v.length==t?void w(v):void x.continue()):void w(v)})})})});var q={open:function(r,s,t){var u=d(indexedDB,'open',[r,s]),v=u.request;return v.onupgradeneeded=function(w){t&&t(new n(v.result,w.oldVersion,v.transaction))},u.then(function(w){return new o(w)})},delete:function(r){return d(indexedDB,'deleteDatabase',[r])}};a.exports=q})()});class IDBHelper{constructor(a,b,c){if(a==void 0||b==void 0||c==void 0)throw Error('name, version, storeName must be passed to the constructor.');this._name=a,this._version=b,this._storeName=c}_getDb(){return this._dbPromise?this._dbPromise:(this._dbPromise=idb.open(this._name,this._version,a=>{a.createObjectStore(this._storeName)}).then(a=>{return a}),this._dbPromise)}close(){return this._dbPromise?this._dbPromise.then(a=>{a.close(),this._dbPromise=null}):void 0}put(a,b){return this._getDb().then(c=>{const d=c.transaction(this._storeName,'readwrite'),e=d.objectStore(this._storeName);return e.put(b,a),d.complete})}delete(a){return this._getDb().then(b=>{const c=b.transaction(this._storeName,'readwrite'),d=c.objectStore(this._storeName);return d.delete(a),c.complete})}get(a){return this._getDb().then(b=>{return b.transaction(this._storeName).objectStore(this._storeName).get(a)})}getAllValues(){return this._getDb().then(a=>{return a.transaction(this._storeName).objectStore(this._storeName).getAll()})}getAllKeys(){return this._getDb().then(a=>{return a.transaction(this._storeName).objectStore(this._storeName).getAllKeys()})}}const cacheBustParamName='_sw-precaching',version='v1',dbName='sw-precaching',dbVersion='1',dbStorename='asset-revisions';let tmpRevisionedCacheName=`sw-precaching-revisioned-${version}`,tmpUnrevisionedCacheName=`sw-precaching-unrevisioned-${version}`;self&&self.registration&&(tmpRevisionedCacheName+=`-${self.registration.scope}`,tmpUnrevisionedCacheName+=`-${self.registration.scope}`);const defaultRevisionedCacheName=tmpRevisionedCacheName,defaultUnrevisionedCacheName=tmpUnrevisionedCacheName;class RevisionDetailsModel{constructor(){this._idbHelper=new IDBHelper(dbName,dbVersion,dbStorename)}get(a){return this._idbHelper.get(a)}put(a,b){return this._idbHelper.put(a,b)}_close(){this._idbHelper.close()}}class BaseCacheEntry{constructor({entryID:a,revision:b,request:c,cacheBust:d}){this.entryID=a,this.revision=b,this.request=c,this.cacheBust=d}getNetworkRequest(){if(!0!==this.cacheBust)return this.request;let a=this.request.url;const b={};if(!0===this.cacheBust)if('cache'in Request.prototype)b.cache='reload';else{const c=new URL(a,location);c.search+=(c.search?'&':'')+encodeURIComponent(cacheBustParamName)+'='+encodeURIComponent(this.revision),a=c.toString()}return new Request(a,b)}}class StringCacheEntry extends BaseCacheEntry{constructor(a){if(assert.isType({url:a},'string'),0===a.length)throw ErrorFactory.createError('invalid-revisioned-entry',new Error('Bad url Parameter. It should be a string:'+JSON.stringify(a)));super({entryID:a,revision:a,request:new Request(a),cacheBust:!1})}}class DefaultsCacheEntry extends BaseCacheEntry{constructor({entryID:a,revision:b,url:c,cacheBust:d}){if('undefined'==typeof d&&(d=!0),'undefined'==typeof a&&(a=new URL(c,location).toString()),assert.isType({revision:b},'string'),0===b.length)throw ErrorFactory.createError('invalid-revisioned-entry',new Error('Bad revision Parameter. It should be a string with at least one character: '+JSON.stringify(b)));if(assert.isType({url:c},'string'),0===c.length)throw ErrorFactory.createError('invalid-revisioned-entry',new Error('Bad url Parameter. It should be a string:'+JSON.stringify(c)));if(assert.isType({entryID:a},'string'),0===a.length)throw ErrorFactory.createError('invalid-revisioned-entry',new Error('Bad entryID Parameter. It should be a string with at least one character: '+JSON.stringify(a)));assert.isType({cacheBust:d},'boolean'),super({entryID:a,revision:b,request:new Request(c),cacheBust:d})}}class RevisionedCacheManager extends BaseCacheManager{constructor(){super(defaultRevisionedCacheName),this._revisionDetailsModel=new RevisionDetailsModel}cache(a){super.cache(a)}_parseEntry(a){if('undefined'==typeof a||null===a)throw ErrorFactory.createError('invalid-revisioned-entry',new Error('Invalid file entry: '+JSON.stringify(a)));let b;switch(typeof a){case'string':b=new StringCacheEntry(a);break;case'object':b=new DefaultsCacheEntry(a);break;default:throw ErrorFactory.createError('invalid-revisioned-entry',new Error('Invalid file entry: '+JSON.stringify(b)));}return b}_onDuplicateInstallEntryFound(a,b){if(b.revision!==a.revision)throw ErrorFactory.createError('duplicate-entry-diff-revisions',new Error(`${JSON.stringify(b)} <=> `+`${JSON.stringify(a)}`))}_isAlreadyCached(a){var b=this;return asyncToGenerator(function*(){const c=yield b._revisionDetailsModel.get(a.entryID);if(c!==a.revision)return!1;const d=yield b._getCache(),e=yield d.match(a.request);return!!e})()}_onEntryCached(a){var b=this;return asyncToGenerator(function*(){yield b._revisionDetailsModel.put(a.entryID,a.revision)})()}_close(){this._revisionDetailsModel._close()}}class RequestCacheEntry extends BaseCacheEntry{constructor(a){if(!(a instanceof Request))throw ErrorFactory.createError('invalid-unrevisioned-entry',new Error('Invalid file entry: '+JSON.stringify(a)));super({entryID:a.url,request:a,cacheBust:!1})}}class UnrevisionedCacheManager extends BaseCacheManager{constructor(){super(defaultUnrevisionedCacheName)}cache(a){super.cache(a)}_parseEntry(a){if('undefined'==typeof a||null===a)throw ErrorFactory.createError('invalid-unrevisioned-entry',new Error('Invalid file entry: '+JSON.stringify(a)));if('string'==typeof a)return new StringCacheEntry(a);if(a instanceof Request)return new RequestCacheEntry(a);throw ErrorFactory.createError('invalid-unrevisioned-entry',new Error('Invalid file entry: '+JSON.stringify(a)))}_onDuplicateInstallEntryFound(a,b){}_isAlreadyCached(a){return asyncToGenerator(function*(){return!1})()}_onEntryCached(a){}}class PrecacheManager{constructor(){this._eventsRegistered=!1,this._revisionedManager=new RevisionedCacheManager,this._unrevisionedManager=new UnrevisionedCacheManager,this._registerEvents()}_registerEvents(){this._eventsRegistered||(this._eventsRegistered=!0,self.addEventListener('install',a=>{const b=Promise.all([this._revisionedManager._performInstallStep(),this._unrevisionedManager._performInstallStep()]).then(()=>{this._close()}).catch(c=>{throw this._close(),c});a.waitUntil(b)}),self.addEventListener('activate',a=>{const b=Promise.all([this._revisionedManager._cleanUpOldEntries(),this._unrevisionedManager._cleanUpOldEntries()]).then(()=>{this._close()}).catch(c=>{throw this._close(),c});a.waitUntil(b)}))}cacheRevisioned({revisionedFiles:a}={}){assert.isInstance({revisionedFiles:a},Array),this._revisionedManager.cache(a)}cacheUnrevisioned({unrevisionedFiles:a}={}){assert.isInstance({unrevisionedFiles:a},Array),this._unrevisionedManager.cache(a)}_close(){this._revisionedManager._close()}}if(!assert.isSWEnv())throw ErrorFactory.createError('not-in-sw');export{PrecacheManager};