/*
 Copyright 2016 Google Inc. All Rights Reserved.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/
(function(a,b){'object'==typeof exports&&'undefined'!=typeof module?b(exports):'function'==typeof define&&define.amd?define(['exports'],b):b((a.goog=a.goog||{},a.goog.precaching=a.goog.precaching||{}))})(this,function(a){'use strict';const b={'not-in-sw':'sw-precaching must be loaded in your service worker file.','invalid-revisioned-entry':`File manifest entries must be either a `+`string with revision info in the url or an object with a 'url' and `+`'revision' parameters.`,'invalid-unrevisioned-entry':``,'bad-cache-bust':`The cache bust parameter must be a boolean.`,'duplicate-entry-diff-revisions':`An attempt was made to cache the same `+`url twice with each having different revisions. This is not supported.`,'request-not-cached':`A request failed the criteria to be cached. By `+`default, only responses with 'response.ok = true' are cached.`,'should-override':'Method should be overridden by the extending class.'};var c=new class{constructor(w){this._errors=w}createError(w,x){if(!(w in this._errors))throw new Error(`Unable to generate error '${w}'.`);let y=this._errors[w],z=null;x&&(y+=` [${x.message}]`,z=x.stack);const A=new Error;return A.name=w,A.message=y,A.stack=z,A}}(b),d={atLeastOne:function(w){const x=Object.keys(w);if(!x.some(y=>w[y]!==void 0))throw Error('Please set at least one of the following parameters: '+x.map(y=>`'${y}'`).join(', '))},hasMethod:function(w,x){const y=Object.keys(w).pop(),z=typeof w[y][x];if('function'!=z)throw Error(`The '${y}' parameter must be an object that exposes `+`a '${x}' method.`)},isInstance:function(w,x){const y=Object.keys(w).pop();if(!(w[y]instanceof x))throw Error(`The '${y}' parameter must be an instance of `+`'${x.name}'`)},isOneOf:function(w,x){const y=Object.keys(w).pop();if(!x.includes(w[y]))throw Error(`The '${y}' parameter must be set to one of the `+`following: ${x}`)},isType:function(w,x){const y=Object.keys(w).pop(),z=typeof w[y];if(z!==x)throw Error(`The '${y}' parameter has the wrong type. `+`(Expected: ${x}, actual: ${z})`)},isSWEnv:function(){return'ServiceWorkerGlobalScope'in self&&self instanceof ServiceWorkerGlobalScope},isValue:function(w,x){const y=Object.keys(w).pop(),z=w[y];if(z!==x)throw Error(`The '${y}' parameter has the wrong value. `+`(Expected: ${x}, actual: ${z})`)}},e=function(v){return function(){var w=v.apply(this,arguments);return new Promise(function(x,y){function z(A,B){try{var C=w[A](B),D=C.value}catch(E){return void y(E)}return C.done?void x(D):Promise.resolve(D).then(function(E){z('next',E)},function(E){z('throw',E)})}return z('next')})}};class f{constructor(v){this._entriesToCache=new Map,this._cacheName=v}cache(v){v.forEach(w=>{this._addEntryToInstallList(this._parseEntry(w))})}_addEntryToInstallList(v){const w=v.entryID,x=this._entriesToCache.get(v.entryID);return x?void this._onDuplicateInstallEntryFound(v,x):void this._entriesToCache.set(w,v)}_performInstallStep(){var v=this;return e(function*(){if(0!==v._entriesToCache.size){const w=[];return v._entriesToCache.forEach(function(x){w.push(v._cacheEntry(x))}),Promise.all(w)}})()}_cacheEntry(v){var w=this;return e(function*(){const x=yield w._isAlreadyCached(v);if(!x){let y=yield fetch(v.getNetworkRequest(),{credentials:'same-origin',redirect:'follow'});if(y.ok){const z=yield w._getCache();return yield z.put(v.request,y),w._onEntryCached(v)}throw c.createError('request-not-cached',{message:`Failed to get a cacheable response for `+`'${v.request.url}'`})}})()}_cleanUpOldEntries(){var v=this;return e(function*(){if(yield caches.has(v._cacheName)){const w=[];v._entriesToCache.forEach(function(A){w.push(A.request.url)});const x=yield v._getCache(),y=yield x.keys(),z=y.filter(function(A){return!w.includes(A.url)});return Promise.all(z.map(function(A){return x.delete(A)}))}})()}_getCache(){var v=this;return e(function*(){return v._cache||(v._cache=yield caches.open(v._cacheName)),v._cache})()}_parseEntry(v){throw c.createError('should-override')}_onDuplicateEntryFound(v,w){throw c.createError('should-override')}_isAlreadyCached(v){throw c.createError('should-override')}_onEntryCached(v){throw c.createError('should-override')}}var g=function(w,x){return x={exports:{}},w(x,x.exports),x.exports}(function(v){'use strict';(function(){function w(L){return Array.prototype.slice.call(L)}function x(L){return new Promise(function(M,N){L.onsuccess=function(){M(L.result)},L.onerror=function(){N(L.error)}})}function y(L,M,N){var O,P=new Promise(function(Q,R){O=L[M].apply(L,N),x(O).then(Q,R)});return P.request=O,P}function z(L,M,N){var O=y(L,M,N);return O.then(function(P){if(P)return new F(P,O.request)})}function A(L,M,N){N.forEach(function(O){Object.defineProperty(L.prototype,O,{get:function(){return this[M][O]},set:function(P){this[M][O]=P}})})}function B(L,M,N,O){O.forEach(function(P){P in N.prototype&&(L.prototype[P]=function(){return y(this[M],P,arguments)})})}function C(L,M,N,O){O.forEach(function(P){P in N.prototype&&(L.prototype[P]=function(){return this[M][P].apply(this[M],arguments)})})}function D(L,M,N,O){O.forEach(function(P){P in N.prototype&&(L.prototype[P]=function(){return z(this[M],P,arguments)})})}function E(L){this._index=L}function F(L,M){this._cursor=L,this._request=M}function G(L){this._store=L}function H(L){this._tx=L,this.complete=new Promise(function(M,N){L.oncomplete=function(){M()},L.onerror=function(){N(L.error)},L.onabort=function(){N(L.error)}})}function I(L,M,N){this._db=L,this.oldVersion=M,this.transaction=new H(N)}function J(L){this._db=L}A(E,'_index',['name','keyPath','multiEntry','unique']),B(E,'_index',IDBIndex,['get','getKey','getAll','getAllKeys','count']),D(E,'_index',IDBIndex,['openCursor','openKeyCursor']),A(F,'_cursor',['direction','key','primaryKey','value']),B(F,'_cursor',IDBCursor,['update','delete']),['advance','continue','continuePrimaryKey'].forEach(function(L){L in IDBCursor.prototype&&(F.prototype[L]=function(){var M=this,N=arguments;return Promise.resolve().then(function(){return M._cursor[L].apply(M._cursor,N),x(M._request).then(function(O){if(O)return new F(O,M._request)})})})}),G.prototype.createIndex=function(){return new E(this._store.createIndex.apply(this._store,arguments))},G.prototype.index=function(){return new E(this._store.index.apply(this._store,arguments))},A(G,'_store',['name','keyPath','indexNames','autoIncrement']),B(G,'_store',IDBObjectStore,['put','add','delete','clear','get','getAll','getKey','getAllKeys','count']),D(G,'_store',IDBObjectStore,['openCursor','openKeyCursor']),C(G,'_store',IDBObjectStore,['deleteIndex']),H.prototype.objectStore=function(){return new G(this._tx.objectStore.apply(this._tx,arguments))},A(H,'_tx',['objectStoreNames','mode']),C(H,'_tx',IDBTransaction,['abort']),I.prototype.createObjectStore=function(){return new G(this._db.createObjectStore.apply(this._db,arguments))},A(I,'_db',['name','version','objectStoreNames']),C(I,'_db',IDBDatabase,['deleteObjectStore','close']),J.prototype.transaction=function(){return new H(this._db.transaction.apply(this._db,arguments))},A(J,'_db',['name','version','objectStoreNames']),C(J,'_db',IDBDatabase,['close']),['openCursor','openKeyCursor'].forEach(function(L){[G,E].forEach(function(M){M.prototype[L.replace('open','iterate')]=function(){var N=w(arguments),O=N[N.length-1],P=this._store||this._index,Q=P[L].apply(P,N.slice(0,-1));Q.onsuccess=function(){O(Q.result)}}})}),[E,G].forEach(function(L){L.prototype.getAll||(L.prototype.getAll=function(M,N){var O=this,P=[];return new Promise(function(Q){O.iterateCursor(M,function(R){return R?(P.push(R.value),void 0!==N&&P.length==N?void Q(P):void R.continue()):void Q(P)})})})});var K={open:function(L,M,N){var O=y(indexedDB,'open',[L,M]),P=O.request;return P.onupgradeneeded=function(Q){N&&N(new I(P.result,Q.oldVersion,P.transaction))},O.then(function(Q){return new J(Q)})},delete:function(L){return y(indexedDB,'deleteDatabase',[L])}};v.exports=K})()});class h{constructor(v,w,x){if(v==void 0||w==void 0||x==void 0)throw Error('name, version, storeName must be passed to the constructor.');this._name=v,this._version=w,this._storeName=x}_getDb(){return this._dbPromise?this._dbPromise:(this._dbPromise=g.open(this._name,this._version,v=>{v.createObjectStore(this._storeName)}).then(v=>{return v}),this._dbPromise)}close(){return this._dbPromise?this._dbPromise.then(v=>{v.close(),this._dbPromise=null}):void 0}put(v,w){return this._getDb().then(x=>{const y=x.transaction(this._storeName,'readwrite'),z=y.objectStore(this._storeName);return z.put(w,v),y.complete})}delete(v){return this._getDb().then(w=>{const x=w.transaction(this._storeName,'readwrite'),y=x.objectStore(this._storeName);return y.delete(v),x.complete})}get(v){return this._getDb().then(w=>{return w.transaction(this._storeName).objectStore(this._storeName).get(v)})}getAllValues(){return this._getDb().then(v=>{return v.transaction(this._storeName).objectStore(this._storeName).getAll()})}getAllKeys(){return this._getDb().then(v=>{return v.transaction(this._storeName).objectStore(this._storeName).getAllKeys()})}}const i='v1';let j=`sw-precaching-revisioned-${i}`,k=`sw-precaching-unrevisioned-${i}`;self&&self.registration&&(j+=`-${self.registration.scope}`,k+=`-${self.registration.scope}`);const l=j,m=k;class n{constructor(){this._idbHelper=new h('sw-precaching','1','asset-revisions')}get(v){return this._idbHelper.get(v)}put(v,w){return this._idbHelper.put(v,w)}_close(){this._idbHelper.close()}}class o{constructor({entryID:v,revision:w,request:x,cacheBust:y}){this.entryID=v,this.revision=w,this.request=x,this.cacheBust=y}getNetworkRequest(){if(!0!==this.cacheBust)return this.request;let v=this.request.url;const w={};if(!0===this.cacheBust)if('cache'in Request.prototype)w.cache='reload';else{const x=new URL(v,location);x.search+=(x.search?'&':'')+encodeURIComponent('_sw-precaching')+'='+encodeURIComponent(this.revision),v=x.toString()}return new Request(v,w)}}class q extends o{constructor(v){if(d.isType({url:v},'string'),0===v.length)throw c.createError('invalid-revisioned-entry',new Error('Bad url Parameter. It should be a string:'+JSON.stringify(v)));super({entryID:v,revision:v,request:new Request(v),cacheBust:!1})}}class r extends o{constructor({entryID:v,revision:w,url:x,cacheBust:y}){if('undefined'==typeof y&&(y=!0),'undefined'==typeof v&&(v=new URL(x,location).toString()),d.isType({revision:w},'string'),0===w.length)throw c.createError('invalid-revisioned-entry',new Error('Bad revision Parameter. It should be a string with at least one character: '+JSON.stringify(w)));if(d.isType({url:x},'string'),0===x.length)throw c.createError('invalid-revisioned-entry',new Error('Bad url Parameter. It should be a string:'+JSON.stringify(x)));if(d.isType({entryID:v},'string'),0===v.length)throw c.createError('invalid-revisioned-entry',new Error('Bad entryID Parameter. It should be a string with at least one character: '+JSON.stringify(v)));d.isType({cacheBust:y},'boolean'),super({entryID:v,revision:w,request:new Request(x),cacheBust:y})}}class s extends f{constructor(){super(l),this._revisionDetailsModel=new n}cache(v){super.cache(v)}_parseEntry(v){if('undefined'==typeof v||null===v)throw c.createError('invalid-revisioned-entry',new Error('Invalid file entry: '+JSON.stringify(v)));let w;switch(typeof v){case'string':w=new q(v);break;case'object':w=new r(v);break;default:throw c.createError('invalid-revisioned-entry',new Error('Invalid file entry: '+JSON.stringify(w)));}return w}_onDuplicateInstallEntryFound(v,w){if(w.revision!==v.revision)throw c.createError('duplicate-entry-diff-revisions',new Error(`${JSON.stringify(w)} <=> `+`${JSON.stringify(v)}`))}_isAlreadyCached(v){var w=this;return e(function*(){const x=yield w._revisionDetailsModel.get(v.entryID);if(x!==v.revision)return!1;const y=yield w._getCache(),z=yield y.match(v.request);return!!z})()}_onEntryCached(v){var w=this;return e(function*(){yield w._revisionDetailsModel.put(v.entryID,v.revision)})()}_close(){this._revisionDetailsModel._close()}}class t extends o{constructor(v){if(!(v instanceof Request))throw c.createError('invalid-unrevisioned-entry',new Error('Invalid file entry: '+JSON.stringify(v)));super({entryID:v.url,request:v,cacheBust:!1})}}class u extends f{constructor(){super(m)}cache(v){super.cache(v)}_parseEntry(v){if('undefined'==typeof v||null===v)throw c.createError('invalid-unrevisioned-entry',new Error('Invalid file entry: '+JSON.stringify(v)));if('string'==typeof v)return new q(v);if(v instanceof Request)return new t(v);throw c.createError('invalid-unrevisioned-entry',new Error('Invalid file entry: '+JSON.stringify(v)))}_onDuplicateInstallEntryFound(v,w){}_isAlreadyCached(v){return e(function*(){return!1})()}_onEntryCached(v){}}if(!d.isSWEnv())throw c.createError('not-in-sw');a.PrecacheManager=class{constructor(){this._eventsRegistered=!1,this._revisionedManager=new s,this._unrevisionedManager=new u,this._registerEvents()}_registerEvents(){this._eventsRegistered||(this._eventsRegistered=!0,self.addEventListener('install',w=>{const x=Promise.all([this._revisionedManager._performInstallStep(),this._unrevisionedManager._performInstallStep()]).then(()=>{this._close()}).catch(y=>{throw this._close(),y});w.waitUntil(x)}),self.addEventListener('activate',w=>{const x=Promise.all([this._revisionedManager._cleanUpOldEntries(),this._unrevisionedManager._cleanUpOldEntries()]).then(()=>{this._close()}).catch(y=>{throw this._close(),y});w.waitUntil(x)}))}cacheRevisioned({revisionedFiles:w}={}){d.isInstance({revisionedFiles:w},Array),this._revisionedManager.cache(w)}cacheUnrevisioned({unrevisionedFiles:w}={}){d.isInstance({unrevisionedFiles:w},Array),this._unrevisionedManager.cache(w)}_close(){this._revisionedManager._close()}},Object.defineProperty(a,'__esModule',{value:!0})});
//# sourceMappingURL=sw-precaching.min.js.map
